<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[云帧中继、OSPF]]></title>
    <url>%2F2019%2F03%2F15%2F%E4%BA%91%E7%9A%84%E5%B8%A7%E4%B8%AD%E7%BB%A7%E9%85%8D%E7%BD%AE%E3%80%81OSPF%2F</url>
    <content type="text"><![CDATA[配置云中继基本命令： -int [端口号] 进入端口配置模式 -en frame-relay 封装成云中继模式 -fr lmi-type [cisco|ANSI|Q933a] 配置帧中继封装类型 -fr interface-dlci [101、102...] 配置帧中继通道 然后再云的端口中添加通道。在帧中继添加帧中继 OSPFospf的特点： 无路由自环问题 支持可变长子网 支持区域划分、适应大规模网络 支持等值路径负载分担 支持路由验证，可以防止对路由器、路由协议的攻击行为 收敛时间短，比EIGRP长 不会周期性广播路由表，节省带宽资源 直接封装于IP协议之上（协议号：89），靠自身的传输机制保证可靠传输 数据包TTL值为1，保证只能传递到相邻的路由器 以组播地址发送协议报文（DR/BDR：224.0.0.6；SPF：224.0.0.5） 基本术语： 路由器ID：表现形式一个IP地址 邻接：相互交换LSA（链路状态广播）的OSPF的邻居建立的关系 邻居：相连且能匹配hello数据包所指定的参数 指定路由器（DR）：类比中心节点，产生本网络的路由宣告，列出链接到这个网络有哪些路由器，包括自己 备份指定路由器（BDR）：DR的备份路由器，DR出问题时，BDR进行DR的工作 OROTHER:非DR也非BDR OSPF链路状态数据库：所有链路状态构成的链路状态数据库 区域边界路由器：一个路由器链接这多个区域 自治系统边界路由器：一个路由器链接多个自治系统 广播式网络:一个节点发送，能被所有节点接收 OSPF数据包类型： hello：发现、维持邻居关系，选举DR/BDR（编号：1） 数据库描述：交换链路状态数据库LSA头；（编号：2） 作用：选举交换链路状态数据库过程中的主从关系 确定交换链路状态数据过程中的初始序列号 交换所有哦的LSA数据头部 链路状态请求：请求一个指定的LSA数据细节（编号：3） 链路状态更新：发送被请求的LSA数据包（编号：4） 作用：用于将多个LSA泛洪，或者对收到的请求进行应答。5S重传时间 链路状态确认：（组播）对链路状态更新包的确认（编号：5） LSA（链路状态通告数据包）分类及详解 路由器LSA： 是否为区域边界路由器（ABR） 是否为自治系统边界路由器（ASBR） 路由器链路的数量 路由类型、链路数据、链路ID 度量值：指定链路的OSPF代价 网络LSA： 网络掩码：与传输网相关的网络掩码 接入（Attached）路由器：接入到传输网的所有路由器的路由ID列表 OSPF网络介质 RFC分为：NBMA(非广播多路访问)、PTMP（点到多点类型） CISCO加分：PTP（点到点）、广播、点到多点非广播 PTP：（组播）OSPF数据包多播发送，不选举，10秒一次hello，邻居死亡时间40S（路由器之间以串口相连的路由器） 广播网络：（组播）选举，10秒一次hello，邻居死亡时间40S，手工指定DR/BDR NBMA：（单播）选举，手工指定DR/BDR、邻居关系，30秒一次hello，邻居死亡时间120S；运行模式和广播网络一样（路由器之间两两相连） PTMP：（组播）不选举，30秒一次hello，邻居死亡时间120S 点到多点非广播：（单播）不选举，手动指定邻居关系，30秒一次hello，邻居死亡时间120S 多区域OSPF中路由器的名称及用途： 区域路由器：IAR，负责维护本区域内部路由器之间的链路状态数据库 骨干路由器：可以使区域路由器，也可以是区域边界路由器 区域边界路由器：ABR，拥有链接区域的所有链路状态数据库，负责区域之间的LSA更新信息 自治系统边界路由器：ASBR，负责自治区域内外信息交换 配置OSPF-router ospf [id] 启用ospf协议，id号最好一样，便于管理 -router-id [IP地址] 给路由器配置一个路由器ID -network [ip地址] [反掩码] area [区域号] 添加相连的网络，注意：是绝对（路由器端口）地址，不是网段 -show ip ospf neighbor 显示邻居信息以及选举信息]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>云帧中继</tag>
        <tag>OSPF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[思科ACL命令详细]]></title>
    <url>%2F2019%2F03%2F15%2F%E6%80%9D%E7%A7%91ACL%E8%AF%A6%E7%BB%86%E5%91%BD%E4%BB%A4%EF%BC%88%E4%B8%89%E5%B1%82%E4%BA%A4%E6%8D%A2%E6%9C%BA%E3%80%81%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%89%2F</url>
    <content type="text"><![CDATA[ACLACL：数据包过滤技术，对网络访问进行控制，保证网络的安全 ACL规则(rule)包含的信息：源MAC，目的MAC，源IP，目的IP，IP协议号，tcp端口等 ACL分类： 根据过滤信息： ip access-list(应用于三层以上); mac access-list(应用于二层); mac-ip access-list(应用于二层以上) 根据信息的复杂程度： standard：标准 extended：扩展，更加详细、细致的过滤信息 根据命名方式： numbered：数字（标准：1-99、1300-1999；扩展：100-199、2000-2699） named：命名 在三层交换机上配置ACL的详细命令IP ACL配置命名标准的IP访问控制列表1.创建一个命名标准IP访问列表 2.指定多条permit或者deny规则 3.开启包过滤，设置默认动作 4.在端口使用访问列表 具体命令： -ip access-list standard [name:jw] 创建一个命名标准IP访问列表 -deny|permit {&lt;源IP网段&gt; &lt;源IP网段反掩码&gt;}|any-source|{host-source &lt;IP地址&gt;} 指定规则 例子：允许原地址为192.168.10.0/24的数据包通过： permit 192.168.10.0 0.0.0.255 拒绝原地址为192.168.20.1的数据包通过： deny host-source 192.168.20.1 -firewall enable 开启包过滤 -firewall disable 关闭包过滤 -firewall default permit 设置默认动作为允许 -firewall default permit 设置默认动作为拒绝 -interface &lt;端口号&gt; 进入端口配置模式 -ip access-group &lt;name&gt; in|out 让过滤规则使用在端口的进或者出的方向 配置命名扩展IP访问列表具体命令： -ip acc-list extended &lt;name:jw&gt; 创建一个命名扩展IP访问列表 -deny|permit icmp {&lt;源IP网段&gt; &lt;源IP网段反掩码&gt;}|any-source|{host-source &lt;源IP地址&gt; &lt;目的IP地址&gt; &lt;目的IP地址反掩码&gt;} |any-destination | host-destination &lt;目的IP地址&gt; [{&lt;icmp-type:icmp类型&gt; &lt;icmp-code:icmp的协议编号&gt;}] [precedence &lt;prec:IP优先级0-7] [tos &lt;tos：0-15&gt;] [time-range &lt;时间组名称&gt;] 定义ICMP规则 -deny|permit igmp {&lt;源IP网段&gt; &lt;源IP网段反掩码&gt;}|any-source|{host-source &lt;源IP地址&gt; &lt;目的IP地址&gt; &lt;目的IP地址反掩码&gt;} |any-destination | host-destination &lt;目的IP地址&gt; [{&lt;igmp-type:igmp类型&gt; &lt;igmp-code:icmp的协议编号&gt;}] [precedence &lt;prec:IP优先级0-7&gt;] [tos &lt;tos：0-15&gt;] [time-range &lt;时间组名称&gt;] 定义IGMP规则 -deny|permit tcp &lt;源IP网段&gt; &lt;源IP网段反掩码&gt; | any-source |host-source &lt;源IP地址&gt; [sPort &lt;sPort：源端口号&gt;] &lt;目的IP地址&gt; &lt;目的IP地址反掩码&gt;| any-destination |host-destination &lt;目的IP地址&gt; [dPort &lt;dPort：目的端口号&gt;] [ack+fin+psh+rst+urg+syn] [precedence &lt;prec&gt;] [tos &lt;tos&gt;] [time -range &lt;时间组名称&gt;] 定义TCP规则 -deny|permit eigrp|gre|igrp|ipinip|ip|&lt;int&gt; &lt;源IP地址段&gt; &lt;源IP地址段反掩码&gt; | any-source | host-source &lt;源IP地址&gt; &lt;目的IP地址&gt; &lt;目的IP地址反掩码&gt; | any-destination |host-destination &lt;目的IP地址&gt; [precedence &lt;prec&gt;] [tos &lt;tos&gt;] [time –range &lt;时间组名称&gt;] 过滤IP等规则 例子： 拒绝igmp报文通过：deny igmp any-source any-destination 允许目的地址为192.168.0.1、目的端口为32的udp包通过：permit udp any-source host-destination 192.168.0.1 dport 32 配置数字标准IP访问控制列表1.创建一个数字标准访问列表,并定义规则 2.开启交换机包过滤，并设置默认动作 4.将规则运用到端口 具体命令： -access-list &lt;num：数字编号&gt; deny|permit {&lt;源IP网段&gt; &lt;源IP网段的反掩码&gt;}|any-source|{host-source &lt;源IP地址&gt;} 例子：创建一个编号为1的标准IP访问控制列表，允许192.168.1.0网段的数据通过 access-list 1 permit 192.168.1.0 0.0.0.255 -intface [端口号] 进入端口 -ip access-group 1 in|out 将规则运用到端口的某个方向 配置数字扩展IP访问列表-access-list &lt;num&gt; deny|peimit ... ... 此处省略号和上面命名扩展IP访问裂变的规则一样 例子：创建一个编号为101的扩展IP访问列表，允许192.168.1.0网段的主机访问ftp服务器202.10.1.2 access-list 101 permit tcp 192.168.1.0 0.0.0.255 host-destination 202.10.1.2 dport 21 -ip access-group 101 in|out 将规则运用到端口 基于时间的访问控制列表1.时间范围命名： time-range &lt;名称&gt; 2.定义具体的时间范围 absolute:绝对时间范围 absolute-periodic：定义绝对周期性时间范围 periodic：定义周期、重复使用的时间范围 3.在访问列表中引用时间范围 具体命令： 1. absolute-periodic Monday|Tuesday|Wednesday |Thursday|Friday|Saturday|Sunday &lt;hh:mm:ss&gt; to Monday.|Tuesday.|Wednesday.|Thursday.| Friday.|Saturday.|Sunday. &lt;hh:mm:ss&gt; 2. Periodic Monday+Tuesday+Wednesday+Thursday+Friday +Saturday+Sunday| daily| weekdays | weekend &lt;hh:mm:ss&gt; to &lt; hh:mm:ss &gt; 3. absolute Monday|Tuesday|Wednesday |Thursday|Friday|Saturday|Sunday &lt;hh:mm:ss&gt; to Monday.|Tuesday.| Wednesday.|Thursday.| Friday.|Saturday.|Sunday. &lt;hh:mm:ss&gt; 或absolute start &lt;hh:mm:ss&gt; &lt;yyyy.mm.dd&gt; end &lt;hh:mm:ss&gt; &lt;yyyy.mm.dd&gt; 例子：使Tuesday的9:15:30 到Saturday的12:30:00时间段内配置生效 -time-range dc-timer -absolute-periodic Tuesday 9：15:30 to Saturday. 12:30:00 使Monday、Wednesday、Friday、Sunday四天的14:30:00到16:45:00时间段内配置生效 -periodic Monday Wednesday Friday Sunday 14:30:00 to 16:45:00 限制192.168.1.0网段的主机只能在2007年6月1日到2008年12月31日内的星期六早上7:00到星期日下午5:00进行WWW访问 -time-range allow-www -absolute start 7:00:00 2007.6.1 end 17:00:00 2008.12.31 -periodic weekend 7:00:00 to 17:00:00 -ip acc-list extended timeacl -permit tcp 192.168.1.0 0.0.0.255 any-destination dport 80 time-range allow-www -firewall enable -firewall default permit -int f0/0 -ip access-group timeacl in MAC ACL数字标准MAC访问列表1.创建数字标准MAC访问列表 2.开启交换机的包过滤，并设置默认动作 3.将规则运用到端口 -access-list &lt;access-list-number&gt; deny|permit any-source-mac|host-source-mac &lt;host_smac&gt; | &lt;smac&gt; &lt;smac-mask&gt; 定义一条数字标准MAC访问控制列表 例子：允许MAC地址为00_00_XX_XX_00_01的数据包通过，拒绝原地址00-00-00-XX-00-ab的数据包通过 -access-list 700 permit 00-00-00-00-00-01 00-00-FF-FF-00-01 -access-list 700 deny 00-00-00-00-00-ab 00-00-00-FF-00-ab 数字扩展MAC访问列表-access-list &lt;access-list-number：1100-1199&gt; deny|permit {any-source-mac| host-source-mac &lt;host_smac&gt; | &lt;smac&gt; &lt;smac-mask&gt;} {any-destination-mac| host-destination-mac&lt;host_dmac&gt; | &lt;dmac&gt; &lt;dmac-mask&gt; } {untagged-eth2：未标记的以太2包格式 |tagged-eth2：标记的以太2包格式| untagged-802.3：未标记的以太802.3（无线）包格式 |tagged-802.3} [&lt;offset1：12-51&gt; &lt;length1&gt; &lt;value1&gt; [&lt;offset2:12-59&gt; &lt;length2&gt; &lt;value2&gt; [&lt;offset3:12-55&gt; &lt;length3&gt;&lt;value3&gt; [&lt;offset4:12-63&gt; &lt;length4&gt; &lt;value4&gt;]]]] 解释：offset:从包头开始起的偏移量，有不同取值；length取值：1-4，对应的value的取值：0-ff，0-ffff，0-ffffff，0-ffffffff 例子：允许任意源MAC地址，任意目的MAC地址的tagged-eth2，且其第15 16个字节分别为0x08，0x00的包通过 -access-list 1100 permit any-source-mac any-destination-mac tagged-eth2 14 2 0800 命名扩展MAC访问列表MAC-access-list extended &lt;name&gt; 创建一个扩展MAC访问列表 -deny|permit {any-source -mac|host-source-mac &lt;host_smac&gt;|&lt;smac&gt; &lt;smac-mask&gt;} {any-destination-mac|host-destination-mac&lt;host_dmac&gt;|&lt;dmac&gt; &lt;dmac-mask&gt;} [untagged-eth2 [ethertype&lt;protocol&gt; [protocol-mask]]] -deny|permit {any-source -mac|host-source-mac &lt;host_smac&gt;|&lt;smac&gt;&lt;smac-mask&gt;} {any-destination-mac|host-destination-mac&lt;host_dmac&gt;|&lt;dmac&gt; &lt;dmac-mask&gt;} [tagged-eth2 [cos &lt;cos-val&gt;[&lt;cos-bitmask&gt;]] [vlanId &lt;vid-value&gt; [&lt;vid-mask&gt;]] -deny|permit {any-source -mac|host-source-mac &lt;host_smac&gt;|&lt;smac&gt; &lt;smac-mask&gt;} {any-destination-mac|host-destination-mac&lt;host_dmac&gt;|&lt;dmac&gt; &lt;dmac-mask&gt;} [untagged-802.3] -deny|permit {any-source -mac|host-source-mac &lt;host_smac&gt;|&lt;smac&gt; &lt;smac-mask&gt;} {any-destination-mac|host-destinationmac&lt;host_dmac&gt;|&lt;dmac&gt; &lt;dmac-mask&gt;} [cos：0-7 &lt;cos-val&gt; [&lt;cosbitmask：cos反掩码&gt;]][vlanId &lt;vid-value：vlan号&gt; [&lt;vid-mask：vlan反掩码&gt;]] [ethertype&lt;protocol:以太网协议号&gt; [&lt;protocol-mask：以太网协议号反掩码&gt;]] 例子：拒绝交换机10号端口的网段中00-12-11-23-XX-XX的802.3数据报文的发出 -access-list 1110 deny 00-12-11-23-11-24 00-00-00-00-ff-ff any-destination-mac tagged-802.3 -access-list 1110 deny 00-12-11-23-11-25 00-00-00-00-ff-ff any-destination-mac untagged-802.3 MAC-IP访问列表数字扩展MAC-IP访问列表-access-list &lt;num&gt; {deny|permit} {any-source -mac| host-source-mac &lt;host_smac&gt;|&lt;smac&gt; &lt;smac-mask&gt;} {any-destination-mac|host-destination-mac &lt;host_dmac&gt;|&lt;dmac&gt; &lt;dmac-mask&gt;} icmp {&lt;source&gt; &lt;source-wildcard&gt;|any-source |host-source&lt;source-host-ip&gt;} {&lt;destination&gt; &lt;destination-wildcard&gt;|any-destination| hostdestination&lt;destination-host-ip&gt;} [&lt;icmp-type&gt; [&lt;icmp-code&gt;]] [precedence&lt;precedence&gt;] [tos &lt;tos&gt;] [time -range &lt;time-range-name&gt;] -access-list &lt;num&gt; {deny|permit} {any-source -mac| host-source-mac &lt;host_smac&gt;|&lt;smac&gt; &lt;smac-mask&gt;} {any-destination-mac|host-destination-mac &lt;host_dmac&gt;|&lt;dmac&gt;&lt;dmac-mask&gt;} igmp {{}|any-source|{host-source}} {{}|any-destination| {hostdestination}} [&lt;igmp-type&gt;] [precedence &lt;precedence&gt;] [tos&lt;tos&gt;][time -range &lt;time-range-name&gt;] -access-list &lt;num&gt; {deny|permit} {any-source -mac|host-source-mac &lt;host_smac&gt;| &lt;smac&gt; &lt;smac-mask&gt;} {any-destination-mac| host-destination-mac&lt;host_dmac&gt; |&lt;dmac&gt; &lt;dmac-mask&gt;} tcp {{}|anysource|{host-source }}[s-port&lt;port1&gt;]{{}|any-destination|{host-destination}} [d-port &lt;port3&gt;] [ack+fin+psh+rst+urg+syn][precedence &lt;precedence&gt;] [tos &lt;tos&gt;][time -range &lt;time-range-name&gt;] -access-list &lt;num&gt; {deny|permit}{any-source -mac| {host-source-mac&lt;host_smac&gt;}|{&lt;smac&gt;&lt;smac-mask&gt;}}{any-destination-mac| {host-destinationmac&lt;host_dmac&gt;}|{&lt;dmac&gt;&lt;dmac-mask&gt;}} udp {{|any-source| {host-source }}[s-port &lt;port1&gt;] {{}|any-destination| {host-destination }}[d-port&lt;port3&gt;] [precedence &lt;precedence&gt;] [tos &lt;tos&gt;][time-range &lt;timerange-name&gt;] -access-list &lt;num&gt; {deny|permit} {any-source -mac|host-source-mac &lt;host_smac&gt;|&lt;smac&gt; &lt;smac-mask&gt;}{any-destination-mac|host-destination-mac&lt;host_dmac&gt; |&lt;dmac&gt; &lt;dmac-mask&gt;}{eigrp|gre|igrp|ip|ipinip|ospf|{&lt;protocol-num&gt;}}{{}|any-source|{host-source}} {{}|any-destination| {host-destination}} [precedence &lt;precedence&gt;][tos&lt;tos&gt;][time -range&lt;time-range-name&gt;] 例子： 允许源MAC 为00-12-34-45-XX-XX，任意目的MAC 地址，源IP 地址为：100.1.1.0 ，0.255.255.255 ，任意目的IP 地址，且源端口是100，目的端口是40000的TCP 报文通过。 -access-list 3199 permit 00-12-34-45-67-0000-00-00-00-FF-FF any-destination-mac tcp 100.1.1.00.255.255.255 s-port 100 any-destination d-port 40000 拒绝任意源MAC 地址及目的MAC 地址，任意源IP 地址及目的IP 地址，且源端口是100，目的端口是40000 的UDP 报文通过。 -access-list 3100 deny any-source-macany-destination-mac udp any-source s-port 100any-destination d-port 40000 交换机10号端口连接的网段MAC地址是00-11-11-11-xx-xx 并且IP地址是192.168.6.14/24的网段，管理员不希望使用FTP，也不允许外网PING 此网段的任何一台主机。 -access-list 3110 deny 00-11-11-11-00-00 00-00-00-00-ff-ffany-destination-mac tcp 192.168.6.14 0.0.0.255 any-destination d-port 21 -access-list 3120 deny any-source-mac 00-11-11-11-00-00 00-00-00-00-ff-ff icmp any-source 192.168.6.14 0.0.0.255 命名扩展MAC-IP访问列表-Mac-ip-access-list extended &lt;name&gt; 其他命令和上面差不多]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>思科ACL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生成树协议基础]]></title>
    <url>%2F2019%2F03%2F15%2F%E7%94%9F%E6%88%90%E6%A0%91%E5%8D%8F%E8%AE%AESTP%2F</url>
    <content type="text"><![CDATA[概念作用： 逻辑上断开环路，防止形成广播风爆 当线路故障时，阻塞的接口被激活，恢复通信 术语： 根网桥，交换机上号比较小的为根网桥 指定接口：根网桥上的所有接口为指定接口，每个物理网段中都有一个端口号比较小的为指定接口，用于通信 根接口：与根网桥通信时开销最小的接口非根网网桥上的接口为跟接口 非指定接口和非跟接口：阻塞 生成树协议三个步骤： 选择根网桥：网桥ID最小的 选择跟接口：到网桥开销最小，直连的网桥ID最小，端口最小 开销：10M:100;100M:19;1000M:4;10000M:2 选择指定接口:根网桥上的接口全是；每个网段上有一个；非根桥的顺序：根路径成本较低，所在交换机的网桥ID值较小，端口值较小 查看生成树： -show spanning-tree 桥协议数据单元BPDU发送： 组播，2秒一次 类型： 配置BPDU 拓扑变更BPDU 交换机端口的5中状态： 转发：发送、接收用户数据 学习：构建网桥表 侦听：构建活动拓扑 阻塞：只接受BPDU 禁用：强制关闭]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>生成树协议</tag>
        <tag>STP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路由重分发配置]]></title>
    <url>%2F2019%2F03%2F15%2F%E8%B7%AF%E7%94%B1%E9%87%8D%E5%88%86%E5%8F%91%2F</url>
    <content type="text"><![CDATA[配置路由重分发命令进入某个路由协议内： -redistribut [ospf/rip/bgp/static/connected] metric [metric_value] metric-type [metric-type_value] subnets 解释： connected：直连路由 static：静态路由 metric：度量值 metric-type：度量类型 subnets：连子网一起宣告 注意： 在RIP中重分发OSPF的时候必须带上度量值(10) 在RIP中重分发EIGRP的时候必须带上度量值（10） 在OSPF中重分发RIP、EIGRP的时候必须带上度量值（200），一般也需要带上子网 在EIGRP中重分发RIP、OSPF的时候必须：-re rip/ospf metric 10000 100 255 1 1500]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>路由重分发配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路由前置基础知识]]></title>
    <url>%2F2019%2F03%2F15%2F%E8%B7%AF%E7%94%B1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%89%8D%E7%BD%AE%E5%86%85%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[网络层的作用定义了基于IP协议的逻辑地址 连接不同的媒介类型 选择数据通过网络的最佳路径 IP数据包格式版本号：4位，指IP协议的版本 首部长度：4位，指首部长度，最大为60字节（单位：4字节，即为0001的时候表示首部长为4字节） 优先级与服务类型：8位，提供三层的QoS 总长度：16位，指首部和数据的总长度，单位为：字节 标示符：16位，用于下层分片时确认是否为同一数据包 标志：3位（X，DF,MF）；X位未启用，DF为1时不允许分片；MF唯1时，后面还有分片。 片偏移量：13位，指这个数据包内的数据在整个数据的位置（单位：8字节，所以每个分片的长度一定是8字节的整数倍） TTL：8位，生命周期字段，每经过一个路由器便减1，减到0后直接丢弃,防止包循环 协议号：8位，用来标示上层协议UDP17，TCP6 首部校验和：16位 源地址：32位 目的地址：32位 可选项： 数据： 特殊的IP地址127.0.0.1：网络回路 0.0.0.0：所有IP，或者无效IP 全1：广播 ARP协议地址解析协议：将已知的IP地址解析成MAC地址 RARP：逆地址解析协议：将已知的MAC地址解析成IP地址 windows中有关ARP的命令： arp -a:查看ARP缓存表 arp -d:清楚ARP缓存 arp -s IP地址 MAC地址：ARP绑定 CISIO路由器中的ARP命令show arp:查看ARP缓存表 clear arp-cache：清除ARP缓存 (config)arp IP-address MAC-address arpa:ARP绑定 (config)no arp IP-address MAC-address arpa:删除ARP绑定 ICMP协议错误侦测与回馈机制,通过IP数据包封装,用来发送错误和控制信息,属于网络层协议 ping命令:-t,一直不停的执行ping -a ping ip:会显示主机的名称 ping ip -l xxx:会ping一个数据包为xxx大小的数据包,可以用来检测通信质量]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>路由前置基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路由器交换机配置基本步骤]]></title>
    <url>%2F2019%2F03%2F15%2F%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[配置vlan1.划分vlan 2.进入vlan配置界面，添加IP 配置远程1.改变名称 2.设置特权模式密码 3.进入远程端口 4.远程连接密码 5.开启端口 配置VTP1.进入vlan database；#vlan database 2.设置vtp空间名；vtp domain [自定义名字] 3.配置vtp模式；三层交换机：vtp server；二层交换机：vtp client 配置trunk1.进入端口配置模式 2.三层交换机：配置封装模式：#sw tr en do 二层交换机：不需要 3.配置trunk模式：#sw mo tr 为三层交换机端口配置ip1.进入端口配置模式 2.启用路由端口：#no sw 3.添加ip地址 三层交换机开启路由功能全局模式下：ip routing 路由器的基本配置1.进入端口 2.添加IP地址 3.退出 4.添加静态路由表]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>配置基本步骤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路由器配置基础]]></title>
    <url>%2F2019%2F03%2F15%2F%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[基本配置和交换机一样 在特权用户模式下: -disa 可以退回普通用户模式 -show history 显示历史命令 -terminal history size [数字] 可以把历史记录大小调整为【数字】大小 这个命令也可以去控制台模式下改大小 -interface s0/0/0 进入串行接口 -write memory 把修改的配置保存在NVRAM中，路由器开机时自动去读取配置 -show命令和交换机基本一样 路由器的show命令-version 查看版本号 -running-config 查看运行的配置 -startup-config 查看路由器的配置文件 -inter serial [串口号] 查看某个串口的详细配置 -ip inter bri 查看所有端口信息 -flash 查看flash中的数据情况 -ip arp 查看路由器缓存的arp表 给路由器配置静态路由表在全局模式下： ip route [目的网段] [子网掩码] [下一跳地址] ip route [0.0.0.0] [0.0.0.0] [吓一跳地址] 这个是默认路由，只适用于单一出口的路由器]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>路由器配置基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[交换机配置基础]]></title>
    <url>%2F2019%2F03%2F15%2F%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[交换机配置cisio设备的常见端口类型S:serial接口,告诉异步串口,路由器连接路由器的时候使用的端口(只在路由器上有) F:快速以太网端口,交换机和电脑连接的端口,最高100M,可限速 E:以太网端口,默认10M G:千兆以太网端口,用来连接以太网 基本命令123456789switch&gt; 这是处于用户模式switch&gt;enable 进入特权用户模式的命令switch# 这是处于特权用户界面，一般用来查看配置，保存信息，重启设备等switch#conf t 进入全局配置模式(congfigure terminal)switch(config)# 这是处于全局配置模式switch(config)#no ip domain-lookup 输入错误的时候不去解析，直接报错（可以用Ctrl+Shift+6打断解析过程）switch(config)#interface [端口号] 进入端口配置模式switch(config-if)# 这是处于端口配置模式，配置端口的详细信息 Ctrl+Z能够直接退回特权模式,end也一样;exit一级一级退. 特权用户模式下show命令-version 查看版本信息 -ip interface brief 查看所有端口信息 -interface [端口] 查看某个端口信息 -running-config 查看运行的配置 -flash 查看缓存目录中的信息 -mac-address-table [dynamic] 查看交换机中的MAC地址表 全局配置模式下-enable password [密码] 修改进入特权模式的密码(明文显示) -enable secret [密码] 同上,显示加密的密文 -service password-encryption 对明文显示的密码加密 -no service password-encryption 对加密的密文进行明文显示 -banner motd #提示信息# 特权用户模式下保存修改信息-write 写入配置信息,保存配置信息 等价写法:-copy running-config startup-config (用的最多,不管什么时候,只要修改了信息,就必须使用,否则修改的不会启用) -reload 重启设备 进入控制台在去全局配置模式下: -line console 0 进入控制台 -logging sy 避免打断输入 -exel-timeout [0 0] 表示一直不退出 [3 3] 表示3分3秒后自动退出,指无操作 -password [密码] 设置进入控制台密码 -loggin 使设置的启用 设置远程登录全局配置模式下: -line vty 0 4 指进入0到4的远程登录接口 -password [密码] 设置远程登录密码 -login 启用设置 全局配置模式下: -line vty 5 15 进入其他9个端口设置 -no login 关闭其他端口 设置端口详细信息全局配置模式下: -interface [端口](f0/1) 进入某个端口设置 -mdix auto 自动调整线序 -duplex [full|half|auto] 指定某接口的双工模式 -speed [10|100|1000|auto] 指定某接口的通信速率 划分Vlan在某一端口配置模式下： -switchport access [vlan号] 进入vlan端口配置模式： -ip address IP地址 子网掩码 保存]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>交换机配置基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[防火墙基础]]></title>
    <url>%2F2019%2F03%2F15%2F%E9%98%B2%E7%81%AB%E5%A2%99%2F</url>
    <content type="text"><![CDATA[防火墙定义：具有安全防护功能的网络设备 作用： 隔离网络：将需要保护的网络和不安全的互联网进行隔离，隐藏信息并进行安全防护 控制流量：对进出防火墙的数据流量进行限制 记录分析：对进出数据进行检查，记录相关信息 基本功能： 访问控制：策略-增强型ACL 攻击防护： 冗余设计： 路由、交换： 日志记录： 虚拟专用网VPN： NAT： 分类：天融信、H3C、juniper 隔离概念： 内部区域：内部保护区域 DMZ区域：隔离区|非军事化区|停火区 外部区域：不安全的互联网 发展: 包过滤防火墙： 分组过滤防火墙：根绝分组包的源、目的地址，端口号及协议类型、标志位等进行过滤 状态监测防火墙： 除了对分组包进行检测外还可以对网络连接状态进行检测 优点：减少检测工作量，提高效率；连接状态可以简化规则配置 缺点：对应用层检测不深入 应用网关型防火墙： 应用代理防火墙：每个代理配置一个不同的应用进程，新应用必须添加服务程序，否则不能使用。 优点：安全性高，检测内容 缺点：连接性差、可升缩性差 配置命令清空所有配置: conf t clear configure all 查看IP： sh ip int b sh int ip b 查看路由表： show i route show route 注意：防火墙不对icmp协议记录状态 配置接口信息： int e0/0 nameif inside|outside|dmz --设置自定义别名 [security-level 0-100] --设置级别 ip add 192.168.0.1 255.255.255.0 no sh exit 默认级别号： inside 100 outside 0 DMZ 0 配置路由： 路由器： ip route IP NETMASK nextIP 防火墙： route outside IP NETMASK nextIP 默认路由可以简化为：0 0 下一跳 配置ACL： 路由器： acc 101 per ip host sIP dIP 反掩码 eq 协议号 --这儿为反掩码 int f0/0 ip acc 101 in|out 防火墙： conf t acc xxx10 [standard|extended] per ip host sIP dIP 正掩码 eq 协议号 --这儿为正掩码 access-group xxx10 in|out int outside 查看命令： show run show int ip b show route show access-list show run 命令首单词(ip|)]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>防火墙基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[动态路由协议简介及RIP]]></title>
    <url>%2F2019%2F03%2F15%2F%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE-RIP%2F</url>
    <content type="text"><![CDATA[动态路由实现：基于某种路由协议的实现 特点：减少路由管理任务；占用网络宽带 动态路由协议：路由器之间用来交换信息的语言 度量值：跳数、带宽、负载、时延、可靠性、成本 收敛：是所有路由器的路由表都达到一致状态的过程 网络中：静态路由和动态路由相互补充 动态路由协议的分类按照执行的算法分类： 距离矢量路由协议：根据从源网络到目的网络所经过的路由器的个数选择路由 代表：RIP/IGRP 适用：网络结构简单、管理人员要求低、特定的网络拓扑结构（星型）、对收敛时间要求低 链路状态路由协议：综合考虑从源网络到目标网络的各条路径的情况选择路由 代表：OSPF/IS-IS 适用：网络结构复杂、分层明显、对管理员要求比较高、对收敛时间要求高 RIP基本概念：定期更新（30S）、邻居、广播更新、全路由表 度量：最大15跳，16跳不可达（路由毒化） 水平分割：从一个接口学习到的路由信息，不再从这个端口发送出去 配置RIP协议的命令-router rip 启用RIP协议 -network [直连网段] 告知当前路由器直连的网段，不需要写子网掩码，当有多个端口都是某一个网段时可以聚合写成一个网段 注意：在写划分vlan的地址时一般每个vlan的网段都需要写 RIP-V2（6条）rip v2与rip v1的区别： v1：有类路由协议，广播更新，不支持可变长子网，自动路由汇总-不可关闭，不支持连续子网 v2：无类路由，组播更新，支持可变长子网，自动路由汇总-可关闭，支持不连续子网 启用rip v2-router rip -version 2 启用v2版本 -no auto-summary 关闭路由汇总 -network 网段 v2版本在传递更新时会携带者子网掩码]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>动态路由协议</tag>
        <tag>RIP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[动态路由协议-EIGRP]]></title>
    <url>%2F2019%2F03%2F15%2F%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE-EIGRP%2F</url>
    <content type="text"><![CDATA[EIGRP最典型的平衡混合路由选择协议，融合距离矢量和链路状态两种路由选择，使用闪速更新（弥散算法），能最快达到网络收敛（最快收敛） 特点： 1.不定期跟新，在改变计量标准或拓扑出现变化发送部分更新 2.更新条目含有掩码，支持可变长子网，支持不连续子网 3.具有相同自治系统号之间可无缝交换路由信息 主要功能： 1.通过协议相关模块支持多个协议（IP/IPX/APPLE TALK） 2.无类 3.支持VLSM/CIDR（IPv4转IPv6） 4.支持概要和不连续网络 5.有效邻居发现（邻居：收到hello（5S）或者ACK，匹配AS号，相同度量） 6.基于可靠协议传输（RTP） 7.基于弥散算法（DUAL）的最佳路径选择 注释：AS： 1.具有相同自治系统号且使用相同EIGRP协议的两台相邻路由器，会维护邻居关系，转发路由功能更新 2.如果自治系统号不相同，就不会建立邻居关系，不会相互发送路由更新 3.以太路由器可以启用多个不同AS 4.所有学来的路由信息，都保存在同一张路由表中 5.AS号用户自定义， 术语： 可行距离：路由器到目的网络的度量值 被报告距离值：邻居到达目的网络的度量值 邻居表：保存邻居状态信息、端口地址 拓扑表：整个网络的拓扑结构图 继任者：下一条路由器 可行继任者:可行距离的备用链路（要求：通过可行继任者到达下一条的度量值比可行距离近） RTP： 1.EIGRP每5S发送hello包 2.没收到ACK的单独发送，最多16次，则不可达 3.对每个数据包都有序列号，可对信息进行追踪 DUAL：最快收敛时间 1.维持所有临近路由拷贝 2.没有可替代路由，则询问邻居 EIGRP三表： 1.邻居关系表：已经建立的邻居关系 2.拓扑表：互联网的拓扑结构 3.路由表：用于路由选择 配置EIGRP-route eigrp &lt;as-number&gt; 启用路由器的eigrp协议 -no a 关闭自动汇总 -net &lt;ipadd&gt; [&lt;ipmas&gt;：反掩码] 添加链接的网段 注意：相邻的两个路由器，一端使用网段路由，另一端只需要使用端口就行 例子:R1：192.168.20.1 255.255.255.0 R2：192.168.20.2 255.255.255.0 r1:-net 192.168.20.0 0.0.0.255 r2:-net 192.168.20.2 0.0.0.0]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>EIGRP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VTP和单臂路由]]></title>
    <url>%2F2019%2F03%2F15%2FVTP%E5%92%8C%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1%E5%99%A8%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[VTP基础VTP：虚拟局域网中继（干道）协议 作用：从一点维护整个网络的VLAN添加、删除、修改和重命名的工作 组成：具有相同域名，通过Trunk相连的一组交换机 vtp的三种模式server模式：学习相同域名的VTP消息，转发相同域名的VTP消息，可以添加、删除、更改vlan client模式：学习相同域名的VTP消息，转发相同域名的VTP消息；不可对vlan进行操作 transparent模式：不学习，不提供vtp消息。可以转发vtp消息。可以操作自己的vlan信息。相当于一根导线 vtp通告总结通告： 内容：vtp域名，当前修订编号和其他vtp配置的详细信息； 触发：服务器5min发一次，执行配置操作后立即发送一次 子集通告： 内容：vlan的详细信息； 触发：操作vlan后 请求通告： 内容：向当前服务器发送请求信息 触发：vtp域名变动，收到的总结通告包含比自己更高的修订号，子集通告的消息缺失，交换机重新配置 vtp修剪作用：减少中继链路上不必要的流量广播 vtp配置全局模式下： -vtp domain [域名] 创建vtp域名 -vtp mode [S/C/T] 配置vtp模式 -vtp password [密码] 创建vtp密码 -vtp pruning vtp修剪 -vtp version 2 配置vtp版本 -show vtp status 查看vtp信息 单臂路由器作用：实现不同vlan之间相互通信 原理：通过路由实现不同vlan之间相互通信 链路：连接路由器的为trunk（中继）模式；连接主机的为access（接入）模式 实现：把路由器的一个物理接口划分多个逻辑子接口 工作原理：路由器实现MAC地址，vlan标签的重新封装 单臂路由器的配置全局模式下： -inter [g0/1.1] 进入接口的子接口 -en do [VLAN号] 封装模式和vlan标签 -ip add [ip地址] [子网掩码] 配置子接口的IP地址 -no shut 开启接口 注意：在配置单臂路由器后，下面的交换机上的vlan可以配置IP地址，但是主机的网关必须是路由器子接口的地址，不然不通 在路由器上实现DHCP服务全局模式下： -ip dhcp pool [ip地址池名称] 定义ip地址池 -network 网段 子网掩码 配置能够动态分配的IP地址 -default-route 网关ip 分配网关地址 -dns-server dns服务器ip 为客户端配置DNS地址 -lease D H M 设定地址的租期 全局模式下： -ip dhcp excluded-address [起始IP] [末尾IP（可以没有，默认为一个IP）] 预留静态分配的IP地址 给vlan动态分配IP地址的办法路由器上配置全局模式下： -ip dhcp pool jw 配置一个总的IP地址池 -network [总网段] [总网段的子网掩码] 给总的IP地址池划分一个总网段 -dns-server [IP地址] 配置DNS服务器 -exit 退回全局配置模式 -ip dhcp pool vlan10 给vlan10划分一个IP地址池 -network [vlan10的网段] [vlan10的子网掩码] 给vlan10配置自动分配IP地址的网段 -default-router [IP地址] vlan10的网关，就是vlan10的路由器子接口的IP地址 -exit 退出 注意：路由器在自动分配IP地址的时候按照路由器的端口IP划分的，也就是在dhcp的池里面的网关。 只有在路由器端口和划分的dhcp中的网关相对应时，路由器才会动态的分配IP地址 三层交换机上配置1.先划分vlan [10.20.30] 2.给每个vlan划分一个动态DHCP -ip dhcp pool vlan10 -network [网段] [子网掩码] -de [网关] 3.给每个vlan设置IP地址]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>VTP</tag>
        <tag>单臂路由</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VPN建立]]></title>
    <url>%2F2019%2F03%2F15%2FVPN%2F</url>
    <content type="text"><![CDATA[IPsec VPN概述： 广域网的安全隐患：被窃听、被篡改、被冒充 VPN（虚拟专用网络）的作用：保证数据的保密性（加密）、完整性（hash）、身份认证（签名） 类型： PTP：点到点的PVN（IPsec VPN） 个体到点：远程访问VPN 2层：L2TP VPN 2层：PPTP VPN 2层：SSTP VPN 3层: Easy VPN 3~4层： SSL VPN 连接模式： 传输模式：封装模式简单，传输效率高，不保护IP包头 隧道模式：保护IP包头 加密： 对称加密：DES,3DES,AES 非对称加密：RSA,DSA,DH 秘钥交换：利用非对称加密技术加密对称加密的秘钥，利用对称加密技术加密数据。 密钥交换协议：AKE 数据报文验证： HMAC：实现数据完整性和身份认证[Hash（MD5,SHA）],MD5-HMAC|SHA-MAC 数据+K--HASH算法--得到数字签名(K值不在网络中传输) 建立IPsec VPN： 阶段一：建立安全连接（交换密钥） 阶段二：建立数据链接（传输数据） 配置命令配置加密方案(传输集)： crypto isakmp policy 1 --开始配置VPN，1越大优先值越大 encryption des/3des/aes --对称加密 hash mad5/sha --hash加密 group 1/2/5 --非对称加密算法 authentication per-share --身份认证 lifetime 秒（默认：86400） --生存周期 exit crypto isakmp key 0/6 预共享密钥 address 对方的公网IP --0/6决定共享密钥在设备上以明/密文存储 控制流量/流量触发/匹配VPN隧道流量： acc 101 per ip sIP 反掩码 dIP 反掩码 数据传输模式： crypto ipaec transform-set 传输名 (ah-sha|md5-hmac) (esp-sha|md5-hmac) (esp-des|3des|aes) --任选1-3个 mode transport/tunnel --默认是tunnel exit 建立MAP映射表： crypto map 映射表名 1 ipsec-isakmp match address 101 set transform-set 传输名 set peer 对方的公网IP exit 将MAP表应用到外网接口 int f0/0 crypto map 映射表名 exit 查看第一阶段的连接状态： sh crypto isakmp sa NAT豁免NAT: 101 deny ip 192.168.0.0 10.1.1.0 101 per ip any any VPN: 101 per ip 192.168.0.0 10.1.1.0]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Vlan、Trunk、以太通道]]></title>
    <url>%2F2019%2F03%2F15%2FVlan%E5%88%92%E5%88%86%E5%92%8Ctrunk%E3%80%81%E4%BB%A5%E5%A4%AA%E9%80%9A%E9%81%93%2F</url>
    <content type="text"><![CDATA[不好的网路设计1.形成大型的广播域 2.管理困难，技术支持困难 3.安全性降低 vlan的作用和好处名字：虚拟局域网 作用：用于二层交换机上分割广播域的技术（三层交换机也可以） 好处：分割广播域；进行网络地址划分；灵活性高；简化网络管理 vlan的分类基于端口划分的静态VLAN：按交换机端口划分 基于MAC地址的划分的动态VLAN：按主机的MAC地址划分 基于协议划分的vlan：按主机使用的协议不同划分vlan 基于子网划分的vlan：按给主机使用的网段划分vlan 划分vlan的基本命令全局模式下： -vlan ID号（一个数字） 创建VLAN -name [名字] 给刚创建的vlan命名 -exit -no vlan ID号 删除vlan 把端口归属于某个vlan全局模式下： -interface [端口号] 进入某端口 -switchport access vlan XX 把端口规划到vlanXX -no switchport access vlan XX 把端口从vlanXX中移除 同时划分多个接口-int rang f0/1 - 5 进入1-5端口组模式 -switchport access vlan xx 把这个组划分给vlanxx -show vlan brief 查看vlan表 trunk不同交换机上链接有相同的vlan，它们之间通信需要trunk 在网络中：有trunk的(能够传递所有vlan的数据帧)叫做中继链路 只能传递某一个vlan的数据帧的链路叫做介入链路 中继帧：ISL：cisio私有帧格式 IEEE 802.1q：国际标准中继帧格式 配置trunk全局模式下： -inter [端口号] 进入交换机相连的那个端口 -switchport trunk encapsulation dotlq 配置封装类型，dotlq是国际标准帧（只能在三层交换机上配置） 简写：-sw tr en do -switchport mode trunk 将接口配置为trunk模式 简写：-sw mo tr -switchport trunk native vlan xx 指定本帧vlan，一条链路链接双方的本帧vlan必须是相同的，并且本帧vlan不能禁止 -sw tr allowed vlan remove xx 其中xx是某个vlan，不允许vlanxx的帧通过vlan -sw tr allowed vlan [xx1，xx2.../all] 允许vlanxx或者所有的帧通过trunk 默认全部帧都可以通过 -show inter [端口号] switchport 查看某个端口的状态 -show inter trunk 查看trunk的状态 配置以太网通道目的和作用：将两个交换机之间的多条快速以太网或者千兆以太物理链路捆绑砸一起组成一条逻辑链路，增加带宽 优点：实现负载均衡；容错率高，一条出现故障时，能继续通信 配置以太网通道的命令全局模式下： -inter port-channel [1/2/3.../6] 创建一个以太通道，组号为1-6的正整数 配置接口为以太通道，全局模式下： -inte range [端口组：f0/1-3] 指定一组接口 -sw mo tr 让这组端口为trunk模式 -channel-group 1 mode on 让这个组以以太通道模式 -show etherchannel summary 查看以太通道的配置信息 -show int etherchannel 查看以太通道的信息 注意事项必须先配置成trunk，再配置以太通道；三层交换机在配置trunk的时候要先配置封装模式 参与捆绑的物理特性必须一样：速率、双工、trunk模式 参与捆绑的最多8个端口 一个交换机上有多个以太通道的话要分成不同的组]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>Vlan</tag>
        <tag>Trunk</tag>
        <tag>以太通道</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NAT基础]]></title>
    <url>%2F2019%2F03%2F15%2FNAT%2F</url>
    <content type="text"><![CDATA[NAT的作用1.解决日益短缺的合法IP地址 2.解决局域网内没有合法IP主机访问外网的方法 3.一定的安全作用，隐藏主机 4.在局域网内给外部提供FTP/WWW/TENET服务 NAT的实现方式1.静态转换：static translation，一对一 2.动态转换：dynamic translation，多对多 3.端口多路复用：port address transaction，多对一 四个专用名词内部局部地址：局域网内的主机地址 内部全局地址：内网中访问外网的出口合法IP地址 外网局部地址：外网中某个局域网主机地址 外网全局地址：外网中接收访问的合法IP地址 NAT的优缺点优点：节省共有合法IP地址，处理地址重叠，增强灵活性，安全性 缺点：延迟增大，配置和维护复杂，不支持某些应用，可以通过静态NAT映射来避免 静态转换：只能转换相连的-ip nat inside source static [需要转换的IP地址] [转换后的IP地址] 定义转换关系 -int [端口] 进入某个端口（内部端口或者外部端口，都需要配置） -ip nat inside|outside 应用到端口的出或者入 注意：内部端口和外部端口都需要应用 动态转换：可以转换跨段的（指其他路由器相连的网段）-acc 1 per [网段] [反掩码] 利用ACL控制需要转换的网络地址 -ip nat pool [地址池名称] [起始IP地址] [结尾IP地址] netmask [子网掩码] 定义能够转换的IP地址 -ip nat inside source list [ACL号] pool [地址池名称] 把ACL与能够转换的地址池关联 -int [端口号] 进入内部或者外部端口 -ip nat in|out 在端口上配置NAT 注意：内部和外部端口都需要配置 多路端口复用-acc 1 per [网段] [反掩码] 利用ACL控制能够转换的IP地址 -ip nat pool [onlyone] [IP地址] [IP地址] netmask [子网掩码] 配置转换的地址 -ip nat inside source list 1 pool [onlyone] 关联4 -应用到端口 其中可以不用定义地址池，直接用端口 -ip nat inside source list 1 interface [fastethernet 0/0:外部接口的端口号] overload 注意：overload不能漏掉 一些其他的知识-show ip nat translation [verbose] 查看设备中的NAT信息 -ip nat translation [dns-timeout|icmp-timeout|tcp-timeout|udp-timeout] [second|never] 配置超时时间 特权模式下: -clear ip nat translation * 清除所有NAT转换条目 -clear ip nat tr inside [源IP] [转换后的IP] 清除内部转换条目 -clear ip nat tr outside [源IP] [转换后的IP] 清除外部转换条目 -ip nat inside source static protocol [源IP] [源端口] [转换IP] [转换端口] extendable NAT端口映射 内部转换和外部转换的关系内部转换： 1.将内部流向外部的源地址转换成公网地址 2.将外部流向内部的目的地址转换成内部主机地址 外部转换： 1.将外部流向内部的源地址转换成内部地址 2.将内部流向外部的目的地址转换成外部目的地址]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>NAT转换</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows系统域中的组策略]]></title>
    <url>%2F2019%2F03%2F15%2F%E5%9F%9F%E4%B8%AD%E7%9A%84%E7%BB%84%E7%AD%96%E7%95%A5%2F</url>
    <content type="text"><![CDATA[组策略的作用方便管理AD中用户和计算机的工作环境 用户桌面 计算机启动、关机、和用户登录、注销时所执行的脚本 软件分发 安全设置 对域设置的组策略影响整个域，对OU设置的组策略影响本OU下的所有用户 降低布置用户和计算机环境的总费用（设置一次，所有计算机和用户都执行，减少用户的错误配置） 执行公司使用计算机的规范（桌面环境，安全策略） 组策略适用于win2000以上的操作系统 组策略的结构组策略的具体设置数据保存在GPO中 默认GPO（组策略对象）： 默认域策略（影响域中所有的用户和计算机） 默认域控制器策略（影响与控制器中的所有用户和计算机） GPO所连接的对象 SDOU（链接对象）：站点、域和组织单位 GPO控制 用户和计算机 注意：组策略只能控制活动目录中的用户和计算机 站点的概念活动目录的站点是从物理上抽象的概念 由一个或者几个通过高速链路链接在一起的IP子网组成 站点和域的关系 站点映射网络的物理拓扑结构，域映射网络的逻辑拓扑结构 一个站点可以有多个域 一个域可以有多个站点 站点的主要作用 优化复制 使用户能过使用可靠、高速的连接登录到域控制器上 主要：实现逻辑上的地理位置的划分 GPC和GPTGPC（组策略容器）：包含GPO属性和版本信息的活动目录对象 GPT（组策略模板）:在域控制器的共享系统卷（SYSVOL）中，是一种文件夹层次结构 计算机配置和用户配置计算机配置（只对容器中的计算机生效） 策略 软件设置 windows设置 管理模板 首选项 windows设置 控制面板设置 进入域策略：开始-程序-管理工具-策略管理器-林-域-策略对象-右键默认域策略-编辑 用户配置（只对容器中的用户生效） 策略 软件设置 windows设置 管理模板 首选项 windows设置 控制面板设置 组策略的应用规则继承（默认）：下层容器会继承上层容器的GPD 阻止继承：右键子容器可以选择阻止继承 累加：容器的多个组策略不冲突，最终为所有策略；若冲突，为后设置的策略 应用顺序：LSDOU，本地-站点-应用域-OU-父OU-按从大到小的优先级 强制生效：使下级强制继承（阻止继承无效） 筛选：阻止GPO应用到某个特定的计算机（GPO-委派-高级-权限设置） 软件分发类型： 分发软件 修复软件 删除软件 升级软件 分发软件的步骤： 获取一个.msi的安装包 将软件安装文件放到一个 软件分发点 创建或者修改GPO 分配和发布的区别： 分配：分配到用户或者计算机（强制） 发布:发布给用户 方法：GPO-软件设置-软件安装-新建-数据包 修复软件： 在服务器上修复该软件的源文件 重新部署一次 删除软件： 下一次用户和计算机登录或者启动，软件会被强制删除 用户和计算机仍可继续执行使用软件，但是不允许重新安装 升级软件： 强制升级：强制用户将当前软件升级到新版本 可选升级：允许用户同时使用应应用程序的两个版本]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows基础</tag>
        <tag>Windows域</tag>
        <tag>windows组策略</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows系统域控制器的搭建]]></title>
    <url>%2F2019%2F03%2F15%2F%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%2F</url>
    <content type="text"><![CDATA[域和活动目录域（DC）： 将网络中多台计算机逻辑上组织到一起，进行集中管理，这种区别于工作组的逻辑环境叫做域 域是组织与存储资源的核心管理单元 域控制器： 在域中，[至少]有一台域控制器 域控制器中保存着整个域的用户账号和安全数据库 活动目录(AD)： 是windows网络中的目录服务 提供了存储网络对象信息并让网络用户使用这些数据的方法 活动目录的特点 集中管理 便捷的网络资源访问 用户一次登录可以访问整个网络资源 网络资源主要包括用户账户、组、共享文件夹、打印机 可扩展性 域和活动目录的关系 在一台计算机上安装活动目录使其成为域控制器 域控制器通过活动目录来提供目录服务 域控制器是计算机上的应用程序，活动目录是一种服务 域树： 具有连续的域名空间的多个域 林： 多个域树组成一个林 域和工作组的区别创建方式不同：组，由任何一个计算机的主人创建；域，由服务器创建 安全机制不同：组，只能登陆本机上的账号；域：一个账号可在多台计算机上登陆 登录方式不同：组：计算机启动后自动在工作组中；域，需要提供域账号和密码 安装域控制器的条件管理员权限 操作系统是服务器，web版除外 本地磁盘有一个是NTFS格式的文件系统 有TCP/IP设置（必须是静态IP地址） 有相应的DNS服务器支持 空间足够 安装活动目录的命令命令行：-dcpromo 删除：命令行：-dcpromo，然后去角色管理删除活动目录 DNS在域中的作用域的命名采用DNS标准 客户机定位DC 客户机向DNS服务器发送查询请求 服务器查询SRV资源（服务定位资源） 返回相关DC的IP地址列表给客户 客户联系DC DC相应客户的请求 域的DNS区域维护 SRV资源记录可以定位DC 创建域用户和组注：在域控制器创建后，本地的用户升级为域用户 与用户账户存储在活动目录数据库中 创建域用户的方法 -“Active Directory用户和计算机”工具 显示名：组织单位（OU）中唯一 用户登录名：域中唯一，最长20字符 密码设置 域账户的属性： 登录时间（限制用户登录的时间） 登录到（限定账户使用的范围） 账户过期（限定账户使用的时间） 组的类型： 安全组：可以设置权限，还可以邮件通讯 通讯组：只能电子邮件通讯 全局组：使用范围是整个林及信任域，按逻辑关系创建全局域（具有相同管理任务或者访问权限的用户）， 可以按AGDLP规则来使用全局域 本地域组：使用范围是本域，针对本域的资源创建本地域（成员：用户账户，本地域组，全局组，通用组） 通用组：使用范围是整个林和信任域 全局组和通用组的去别： 全局组：成员的身份在每个域中 通用组：成员身份在全局编录中（多个域时，登录和查询速度快） 创建组的基本步骤： 账户-全局组-本地域-给本地域赋予权限 组和组织单位（OU）、容器的区别组：用于赋予权限 OU：用于管理员对用户和计算机进行管理 对象：一些属性的集合，有自己的名称 容器：可以包含其他对象，还可以包含其他容器 组织单位：可以包含其他对象和组织单位，还有组策略的功能（但是不能有来至其他域的对象） OU定义：将用户、组、计算机和其他组织单位放入AD的容器，是可以指派组策略或者 委派管理的最小作用域或者单元 作用： 可以分类组织对象，使所有对象结构清晰 可以对某些对象配置组策略，实现这些对象的管理和控制 可以委派管理控制权限（实现：“OU”-“委派控制”-“添加要委派任务的账户和组”-“选择要委派的任务”） 取消委派：“OU”-“属性”-“安全”-“高级”-“权限”，删除相应的权限即可 创建组织单位设计方式： 按部门的OU 基于地理位置的OU 基于对象类型的OU 混合型OU 在新建组织单位的时候有个选项是：防止容器被意外删除 在后面需要删除的时候：“查看”-“高级功能”-“组织单位”-“属性”-勾选掉“防止容器被意外删除” 发布共享文件夹作用：同意管理，方便查找 实现：创建共享文件夹-创建OU-在OU上新建-共享文件夹-设置共享文件夹的属性]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows基础</tag>
        <tag>Windows域控制器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows系统本地策略简介]]></title>
    <url>%2F2019%2F03%2F15%2F%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%AD%96%E7%95%A5%2F</url>
    <content type="text"><![CDATA[本地安全策略本地安全策略影响本地计算机的安全设置，只对本计算级生效 本地安全策略主要影响： 账户策略 本地策略 高级安全windows防火墙 进入本地安全策略：开始-程序-管理工具-本地安全策略 命令行：secpol.msc 账户策略密码策略密码必须符合复杂性要求 密码长度最小值 密码最长使用期限 密码最短使用期限 强制密码历史（让每次修改的密码和强制密码历史上的密码不相同） 用可还原的加密来存储密码 账户锁定策略（防止爆破）账户锁定阈值：指定用户输几次错误密码后锁定账户；默认值0，表示不锁定 账户锁定时间：锁定多长时间后自动解锁 复位账户锁定计数器：在多长的时间范围内输错阈值后锁定（30M内输错3次就锁定账户） 本地策略审核策略（成功、失败、无审核）审核策略更改：确定是否对用户权限分配策略、审核策略或信任策略的更改进行审核 审核登录事件：确定是否审核系统中的登录和注销事件 审核对象访问：确定是否审核用户访问某个对象 审核账户登录事件：（远程管理）确定是否审核在这台计算机用于验证账户时，用户登录到其他计算机或者从其他计算机注销的实例 审核系统事件：确定是否审核用户重新启动、关闭计算机以及对系统安全或者安全日志有影响的事件 事件查看器查看审核的详细信息 用户权限分配关闭系统 更改系统时间 拒绝本地登录 允许在本地登录... 安全选项一些有关安全的配置]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows基础</tag>
        <tag>Windows本地策略</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows系统共享文件(夹)、打印机]]></title>
    <url>%2F2019%2F03%2F15%2F%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E6%88%96%E8%80%85%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%81%E6%89%93%E5%8D%B0%E6%9C%BA%2F</url>
    <content type="text"><![CDATA[共享文件夹的特点方便、快捷 与使用光盘，移动盘等相比，不受文件大小限制 可以实现权限控制 实现文件夹共享使用计算机自带的公共文件夹，内部的文件会自动共享 通过对文件夹进行设置，这样会继承NTFS文件系统的属性，权限取交集 共享文件夹完成后： 1.在网络中访问，需要启用“网络发现” 2.在UNC中：\\服务器名（IP地址）\共享名；开始-&gt;运行打开UNC 映射网络驱动器将共享文件夹映射为网络驱动器，能够快速访问 右键“计算机、网络”，映射网络驱动器 命令行模式：net use X:\\计算机名或者IP\共享名 操作系统自行建立的共享文件夹IPC$：进程间进行通信而开放的命名管道 ADMIN$:系统目录共享 查看：开始菜单-管理工具-共享和存储管理 创建隐藏共享重命名在后面加上“$” 再设置共享 对于已经共享的文件夹设置隐藏会报错 共享文件夹的权限完全控制：拥有所有权限 读取：有读取权限 写入：有更改和写入权限 设置权限：共享-高级共享-权限 共享打印机企业打印机属性： 打印速度：每分钟打印页数 打印介质：纸张、卡片、信封 打印颜色：黑白、彩色 打印机数量和物理位置 打印权限：防止非法使用 常见的打印机： 针式打印机：[打印机价格较高、打印特殊介质，][速度慢、噪声大，][消耗色带（价格低），][用于特殊行业特殊设备（ATM）] 喷墨打印机：[打印机价格低、黑白和彩色，][速度慢][消耗墨盒，平均价格高][用于家庭打印、打印照片、彩色图纸等] 激光打印机:[打印机价格昂贵，][速度快，效果好][消耗硒鼓，平均价格较高][用于公司打印] 安装本地打印机： 添加打印机-添加本地打印机 打印机端口 打印机型号 打印机名称 共享打印机 位置和注释 打印测试页 添加网络打印机： 添加网络打印机 输入打印机地址或者查找打印机 设置打印机名称 直接用UNC访问打印机的服务器，可以直接使用 更改打印机属性： 控制面板-打印机-属性 打印机优先级：1-99,1最高，99最低，优先级高有先打印 打印机脱机：可以继续向打印机发送打印作业，恢复后继续打印 打印机停止使用：不可发送作业 打印机权限： 打印权限：打印作业 管理文档权限：调整文档的优先级，暂停、启动、删除、取消打印文档 管理打印机权限：管理打印机 特殊权限： 读取：读取打印机的权限设置 修改：修改打印机的权限设置 取得所有权：获取打印机的所有权限]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows基础</tag>
        <tag>共享文件夹</tag>
        <tag>共享打印机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows磁盘管理]]></title>
    <url>%2F2019%2F03%2F15%2F%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[磁盘类型基本磁盘：时间久、应用广泛，兼容性好，能够分区 动态磁盘：扩展性好，可靠性高 基本磁盘分区： 主分区：最多4个，windows（0-3）、linux（1-4）；一般分为1-3个主分区 扩展分区：最多（一般）1个扩展分区，实际操作中可以没有 逻辑分区：多个逻辑分区，总和为扩展分区的大小（不能用于启动操作系统） 注意:在windows分区的时候，受字母数量限制，最多24个分区 动态磁盘基本磁盘转为动态磁盘： 关闭当前磁盘运行的所有程序 右键点击当前卷，转换为动态磁盘 注意：基本磁盘转为动态磁盘对数据无影响，但是，动态磁盘转为基本磁盘必须删除数据 分卷：简单卷：一个区域/连续或者不连续的多个区域（可以将几个磁盘构成一个简单卷） 没有存放当前操作系统或者不通过简单卷启动计算机，可扩展成更大的简单卷、跨区卷或者镜像卷 跨区卷：将多块（&gt;=2）[硬盘]上的存储空间在逻辑上合成一个磁盘 特点：无容错，读写速度不变，扩大存储，磁盘利用率100% 带区卷（RAID 0）：将多块硬盘空间构成带区卷，每块硬盘提供的空间大小必须相同 特点：无容错，读写速度最快，扩大存储，磁盘利用率100% 镜像卷(RAID 1)：由两块硬盘上的存储空间组成 特点:有容错，读写速度不变，磁盘利用率50% RAID-5卷：至少需要三块硬盘，每块硬盘必须提供相同的磁盘空间 特点：有容错，读写速度较快，磁盘利用率(n-1)/n 磁盘配额磁盘配额与用户： 磁盘配额限制用户账户使用卷/分区的磁盘空间 以文件所有权为基础 管理员组不受磁盘配额的影响 磁盘配额与卷 磁盘配额只是用于卷/分区，且不受卷的文件夹结构及物理上的布局的影响 必须在NTFS文件系统上实现 方法： 右键磁盘分区-配额-启用磁盘配额-配额项，进行磁盘配额设置]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows基础</tag>
        <tag>Windows磁盘管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows系统备份与恢复]]></title>
    <url>%2F2019%2F03%2F15%2F%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%2F</url>
    <content type="text"><![CDATA[备份为什么要备份 硬件故障、病毒、误操作、自然灾害 备份：指将系统中的数据的副本按一定策略存储到安全的地方 目的：在系统出现问题导致数据丢失或者不可用的时候，能利用备份还原数据，尽可能的减少损失 win2008备份注意事项无法使用windows server backup 恢复用Ntbackup.exe创建的备份 需要一个单独的专用磁盘运行备份计划 只能备份本地磁盘上NTFS格式的卷 不能备份到磁带 备份的一些知识备份类型 一次性备份（备份一次） 计划备份（按计划备份） 备份方式 完整服务器备份 自定义备份 备份目标 备份时间（计划备份） 还原数据备份日期 恢复类型 文件和文件夹 卷 恢复选项 恢复目标 重命名文件或者文件夹 备份设置打开windows server backup-配置性能设置 始终执行完整备份 始终执行自定义备份 自定义 备份类型常规备份：备份所选定的文件，不检查标记，备份后清除标记 增量备份：只备份自上次正常或者增量备份以来创建或更改的文件，检查标记，清除标记、 差异备份：只备份自上次正常或增量备份以来创建或者更改的文件，检查标记，保留标记 副本备份：备份所有选定的文件，不检查标记，保留标记 每日备份：当填创建或者更改过的所有选定文件，不检查标记，保留标记 常用的备份方案常规备份+差异备份（备份所有有差异的数据） 常规备份+增量备份（备份今天新增加的数据） 任务计划作用 创建和管理在指定时间自动执行的任务 注意事项 必须启动TASK Scheduer服务 创建计划事件： 开始-程序-附件-系统工具-任务计划程序 设置名称和描述信息 添加触发器：设置运行时间 编辑操作：指定运行程序 任务可以导入或者导出 windows安全模式安全模式：仅适用最基本的驱动程序启动windows 网络安全模式：加载了网络功能的安全模式 带命令行的安全模式：加载了命令行的安全模式，没有图形化界面 启用启动日志：启动同时启用文件ntbtlog.txt,记录着系统加载成功或者没有加载成功的所有驱动和服务记录 启用低分辨率视屏：当显卡出现问题不可用时使用 最近一次正确配置：使用windows上一次关闭时所保存的正确启动信息来启动系统 目录服务还原模式：只使用于windows域控制器，恢复域控制器上的SYSCOL目录和Active Directory目录服务 调试模式：启动同时通过串行电缆将调试信息发送到另一台计算机]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows基础</tag>
        <tag>Windows备份与恢复基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win上的DNS服务器]]></title>
    <url>%2F2019%2F03%2F15%2Fwin2008%E9%85%8D%E7%BD%AEDNS%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[什么是DNS早期使用Hosts文件解析域名 缺点：主机名称重复、主机维护困难 DNS：域名系统，把计算机的域名与其IP地址相对应。 DNS服务器提供域名解析服务： 客户机通过DNS服务器，用计算机的主机名找到相对应的IP地址；或者用IP地址找到相对应的域名 特点：分布式、层次性 域名空间结构根域：“.” 顶级域：组织域（gov：政府部门，com：商业部门，edu：教育部门，org：民间团体组织，net：网络服务机构，mil：军事部门） 国际域、地区域（cn：中国，jp：日本，uk：英国，au：澳大利亚，hk：香港） 反向域 二级域 主机 主机名.dns后缀=FQDN DNS的作用将域名解析成为IP地址 将IP地址解析成域名 DNS的查询过程查询方式分： 递归查询：有客户机向服务器发起的查询 迭代查询：由服务器向服务器发起的查询 查询内容分： 正向查询：域名得到IP地址 反向查询：IP地址得到域名 DNS特性主要DNS服务器 标准主要区域 ADDS集成主要区域 辅助DNS服务器 根存DNS服务器 缓存DNS服务器 配置DNS服务器步骤1.设置DNS服务器的TCP属性：IP地址，掩码，网关，DNS服务器IP地址（注意：IP地址和DNS地址必须配置相同） 2.安装DNS服务器 3.创建区域和区域文件 常用的资源记录： SOA：开始授权记录，记录该区域的版本号，用于判断主要服务器和次要服务器是否进行复制 NS：名称服务器记录，定义网络中其他的DNS名称服务器 A：主机记录，定义网络中的主机名称，把主机名称和IP地址相对应 PTR：指针记录，定义从IP地址到特定资源的对应，用于方向查询 CNAME：别名记录，定义资源记录名称的其DNS域名，常见的是WWW，FTP等 SRV：服务记录，指定网络中某些服务提供商的资源记录，主要用于标示活动目录域控制器 MX：邮件交换记录，指定邮件交换主机的路由信息 4.创建正向查找区域 5.创建反向查找区域 6.创建主机记录 可以创建主机别名：一个IP地址对应多个名称（CNAME） 可以创建邮件交换记录（MX）：添加邮件主机-添加邮件交换记录 转发器作用：将本地DNS服务器无法解析的查询，转发到网络上其他DNS服务器 转发到转发器单位查询一般是递归查询 可以设置条件转发 根提示作用：使非根域的DNS服务器可以查询到根域DNS服务器 向DNS服务器提交一个查询请求时，如果该查询请求的是网络上的资源，本地DNS服务器需要通过一种方式来遍历网上的响应DNS服务器来响应客户（根提示） 端的请求：DNS服务器使用跟提示来将客户的迭代查询请求转发到网络上。跟提示包括多台服务器、 条件转发：将特定的域转发到特定的DNS服务器上 区域传输、子域、委派将一个区域文件复制到多个DNS服务器的过程 从主机服务器上将区域文件复制到辅助服务器 作用：事项该区域的可用性和容错性 子域： 在区域中可以创建子域来扩展域名空间 子域的所有记录保存在父域文件中 委派： 子域过多的时候，维护困难，有域名查询量的瓶颈 新建委派可以将子域委派到其他服务器维护 子域：资源在父域文件中，子域的权威服务器是父域服务器 委派：有单独的区域文件，给新域指定新的权威服务器 域名解析的顺序本机缓存-本机HOSTS文件-DNS服务器 查询本机缓存：ipconfig/displaydns 清除本机DNS缓存：ipconfig/flushdns 本机hosts文件：system32\drivers\etc 域名解析排错清除本地缓存 检查hosts文件 检查客户机配置 配置DNS服务器的IP地址 IP地址是否正确 网络连接 检查DNS服务器上资源记录 nslookup 检查DNS服务是否启用]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>DNS服务器</tag>
        <tag>Windows基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IIS服务器搭建及FTP服务器搭建]]></title>
    <url>%2F2019%2F03%2F15%2FIIS%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[IIS的配置和管理IIS提供的服务 web发布服务 文件传输协议服务 简单邮件传输协议（完整功能需要microsoft exchange server 2008等专业邮件系统） 网络新闻传输协议服务 IIS管理服务 模块式体系结构 兼容性 安装IIS服务器 服务器管理-角色-添加角色-文本服务器-添加必须得功能 停止服务：命令行：net stop w3svc 开启服务：net start w3svc 发布网站 开始-管理工具-IIS管理器-网站（右键）-添加网站-设置默认页面 创建虚拟目录：网站（右键）-添加虚拟目录 在一个IP地址上发布多个网站一.非标准端口号 使用场景：不推荐使用，只适合内网、开发、测试 优点：在同一IP地址上创建大量站点； 缺点：必须输入端口号才能访问，不能使用主机头名称，防火墙必须打开相应的非标准端口号 栗子：http://192.168.1.1:8080 | http//:192.168.1.1:8081 二.唯一IP地址 使用场景：主要用于本地服务器上的HTTPS服务 优点：所有网站都可以使用默认端口 缺点：每个网站都需要一个静态IP地址 三.主机头名称 使用场景：大部分都用此方法 优点：可以在一个IP地址上配置多个网站，对用户透明 缺点：必须通过主机头才能访问，不支持HTTPS，需要DNS配合 主机头绑定方法作用：在一个IP地址上绑定多个多个网站 原理：将不同的网站空间对应不同的域名，以连接请求中的域名字段来分发和应答正确的对应空间的文件执行结果 步骤： 1.创建好网站 2.在DNS上创建相应的区域（域名：xxx.com） 3.把网站添加到IIS服务器中（写上主机头名字:www.xxx.com） 4.改变默认文档 设置web站点的权限对web服务器上的特定网站、文件、文件夹授予相应的访问权限 1.用户向web服务器提出访问请求 2.web服务器向客户端提出验证请求并决定采用所设置的验证方式来验证客户端的访问权限 3.web服务器验证客户端的IP地址 4.web检查文件权限 5.检查NTFS文件系统的权限 6.允许访问站点 设置验证 通过设置IIS来验证或识别客户端用户的身份，以决定是否允许该用户和Web服务器建立网络连接。 但是如果使用匿名访问，或NTFS权限设置不请求Windows账户的用户提供名称与密码，则不进行验证。 验证方式： 匿名验证：允许所有用户访问任何公开资源 基本身份验证：要求用户提供用户名和密码，弱加密内容（基本是明文） 摘要式身份验证：域服务器需要域账户+用户名+密码（加密传输） windows身份验证：使用NTLM、Kerbers协议对用户进行验证，适用内网 forms身份验证：.net表单验证 FTP服务器安装：在安装web服务器的时候可以选择安装FTP服务器 FTP：文件传输协议，实现文件下载和上传 构建FTP服务器：IIS自带的FTP服务组件、Serv-U和LINUX下：vsFTP,wu-FTP 启用和关闭服务 命令行：net start msftpsvc net stop msftpsvc 在IIS6.0管理器中管理FTP站点 FTP用户隔离 可以防止用户查看或者覆盖其他用户的内容 选项： 不隔离：用户可以相互访问 隔离：不同用户不能相互访问 根据域控制器隔离：根绝活动目录中的用户来隔离FTP目录 用命令行访问FTP服务器： -ftp IP地址 -输入用户和密码 -dir -get 下载]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows基础</tag>
        <tag>IIS服务器</tag>
        <tag>FTP服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DHCP服务器搭建]]></title>
    <url>%2F2019%2F03%2F15%2FDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[DHCPDHCP：动态主机配置协议 作用：负责客户机动态分配TCP/IP信息 IP地址 子网掩码 默认网关 首选DNS服务器... 好处： 减小管理员的工作量 减小输入错误的可能性 避免IP冲突 提高IP地址的利用率 DHCP租约过程： 客户机请求IP地址（DHCPDiscover） 服务器相应请求(DHCPOffer) 客户机选择IP地址(DHCPRequest) 服务器确认租约(DHCPAck) DHCP租约更新： 时间到50%时，客户机向服务器发送更新租约时间 时间到87.5%时，客户机向服务器请求更新租约时间，如果不成功，重新请求IP地址 命令：ipconfig/renew：更新IP地址 ipconfig/release：释放IP地址 搭建DHCP服务器步骤： 配置服务器的IP地址（静态的IP地址） 添加服务器角色 授权服务器（避免未授权的DHCP服务器在网络中运行） 配置作用域（一段IP地址，多个网段配置多个作用域） 配置客户机（自动获取IP地址） 维护DHCP服务器 在源服务器上备份DHCP数据库 拷贝备份文件到目标服务器 在目标服务器上还原DHCP数据库]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows基础</tag>
        <tag>DHCP服务器搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BurpSuite界面中英文对照TxT版]]></title>
    <url>%2F2019%2F03%2F11%2Fburp%E4%B8%AD%E8%8B%B1%E6%96%87%E5%AF%B9%E7%85%A7%E5%8D%95%2F</url>
    <content type="text"><![CDATA[@@@@@第一行@@@@ *说明： 1.网上大多数译文都是在图片上进行的，使用不大方便。也是为了加深自己对burp的了解。 2.此译文为机译加自己简单校对，个人英语很渣，故有错误请复制下来自行修改，如告知我感激不尽 3.此译文来源：Two-Ha，个人网络备忘录：https://two-ha.github.io/* -txt文档索引—-菜单—行号———- 菜单栏-------------------------33 burp栏-------------------------35 Project栏----------------------48 intruder栏---------------------63 Repeater栏---------------------91 window栏-----------------------144 help栏-------------------------156 模块栏-------------------------172 dashboard模块------------------173 target模块---------------------278 proxy模块----------------------322 intruder模块-------------------468 repeater模块-------------------796 sequencer模块------------------806 decode模块---------------------855 comparer模块-------------------861 Extender模块-------------------872 project options模块------------920 user options模块---------------974 菜单栏： Burp栏：search：搜索 configuration library:配置库 user options：用户选项 restore defaults:恢复默认设置 load user options；载入用户选项 save user options：保存用户选项 burp infiltrator:是一种用于检测目标Web应用程序的工具 burp clickbandit:一种用于生成点击劫持攻击的工具 burp collaborator client:手动测试期间使用Burp Collaborator的工具 exit:退出 Project栏：Project options：工程选项 restore defaults:恢复默认配置 all：所有的 target:目标 Proxy：代理 Repeater：中继器/转发器 Sequencer:定序器 Project options:工程选项 rename:重命名 save copy:保存复制 import project file:载入工程文件 import legacy state file:载入旧的状态文件 intruder栏:start attack:开始攻击 open saved attack:打开以保存的攻击 scan defined insertion points:扫描定义的插入点 send to Repeater:发送给中继器/转发器 save attack config:保存攻击配置 with payload positions:带着负载位置 without payload positions:不带负载位置 load attack config:载入攻击配置 with payload positions:同上 without payload positions:同上 copy attack config:复制攻击配置 with payload positions:同上 to tab1:到标签1 to new tab:到新的标签页 without payload positions:同上 to tab1:同上 to new tab:同上 new tab behavior:新标签页的动作 use default attack configuration:用默认的攻击配置 copy configuration from first tab:从第一标签页复制配置 copy configuration from last tab:从最后一个标签页复制配置 automatic payload positions:自动负载位置 replace base parameter value:替换基本参数的值 append to base parameter value:追加打基本参数值 configure predefined payload lists:配置预定义的负载的列表 Repeater栏：update content-length:更新内容长度 unpack gzip/deflate:解压 follow redirections：跟随重定向 never：从不 on-site only:仅同一网站这一次 in-scope only:仅在范围内 always:始终 process cookies in redirections；在重定向中处理cookie view:视图 top/bottom split:上下分离 left/right split:左右分离 tabs:标签 action:动作 scan:扫描 send to intruder:发送给入侵模块 send to repeater:发送给转发器模块 send to sequencer:发送给序列发生器 send to comparer:发送给对比模块 send to decoder:发送给编码模块 request in browser:在浏览器中浏览 in original session:在原始会话中 in current browser session:在当前会话中 ------------------------ engagement tools:参与工具 find references:查找运用 discover content:发现内容 schedule task:计划任务 generate csrf poc:生成csrf poc ------------------------ change request method:变更请求方法 change body encoding:改变body编码 copy URL:复制网址 copy as curl command:复制为curl命令 copy to file:复制到文件 paste from file:从文件粘贴 save item:保存为项目 ------------------------- save entire history:保存全部历史 paste url as request:粘贴网址作为请求 add to site map:添加到网站地图 ----------------------- convert selection:转化选定 url-encode as you type:使用你的类型编码网址 ----------------------- cut:剪切 copy:复制 paste:粘贴 ---------------------- message editor documentation:消息 burp repeater documentation:burp转发器文件 window栏：detach dashboard:分离仪表栏 detach target:分离目标 detach proxy:分离代理 detach intruder:分离入侵 detach repeater:分离转发器 detach sequencer:分离定序器 detach decoder:分离编码 detach comparer:分离对比 detach extender:分离扩展栏 help栏：burp suit documentation:burp适配文档 getting started:入门指南 using burp suite:使用burp套件 ------------------ support center:支持中心 release notes:版本说明文件 report bug:报告bug diagnostics:诊断 ----------------- license:授权信息 check for updates:检查升级 download other installers:下载其他安装程序 clean burp from computer:清除电脑上的BURP 模块栏：dashboard模块：仪表模块new scan：新的扫描scan details:扫描详细信息 scan type:扫描类型 crawl and audit:爬取和审计 crawl:爬取 urls to scan:扫描网址 detailed scope configuration:详细的配置范围 use advanced scope control:使用高级范围控制 included url prefixes:包含网址前缀 excluded url prefixes:排除网址前缀 select from library:从记录中选择 ----------------- scan configuration:扫描配置 下面解释：选择配置以控制如何执行扫描。您可以选择多个配置，这些配置将依次应用于确定扫描所使用的最终配置。如果没有选择配置，那么将使用Burp Scanner的默认设置。 ----------------- application login:应用程序登录 下面解释：指定应该提交给任何登录函数的帐户凭据。爬虫将使用这些来发现登录函数背后经过身份验证的内容。 ----------------- resource pool:资源库 下面解释：指定将在其中运行扫描的资源池。资源池用于跨多个任务管理系统资源的使用。 use existing resource pool:使用存在的资源池 create new resource pool:创建新的资源池 name:名称 maximum concurrent requests:最大并发请求 delay between requests:请求之间的延迟 new live task:新的现场任务 scan detail：扫描详细信息 task type:任务类型 live audit：现场审计 live passive crawl：现场被动爬行 tools scope：工具范围 proxy:代理 repeater:转发器 intruder:入侵 URL scope：网址范围 everything:任何事情 suite scope:套件范围 custom scope：自定义范围 deduplication:两份 下面解释：选择要处理的项是否根据其URL和参数名称进行重复数据删除。使用齿选项可避免多次扫描同一项。 ignore duplicate items based on url and parameter names:忽略基于url和参数名称的重复项 ---------------------------- scan configuration:扫描配置 下面解释：选择配置以控制如何执行扫描。您可以选择多个配置，这些配置将依次应用于确定扫描所使用的最终配置。如果没有选择配置，那么将使用Burp Scanner的默认设置。 ----------------- resource pool:资源库 下面解释：指定将在其中运行扫描的资源池。资源池用于跨多个任务管理系统资源的使用。 use existing resource pool:使用存在的资源池 create new resource pool:创建新的资源池 name:名称 maximum concurrent requests:最大并发请求 delay between requests:请求之间的延迟 小齿轮设置项： task auto-start:自动开始任务 create new tasks running:创建正在运行的新任务 create new tasks paused:创建暂停的新任务 resource pools:资源池 下面解释：资源池是一组共享网络资源配额的任务。每个资源池都可以用其配置。自己的限制设置，控制可以并发发出的请求的数量，或请求的速率，或两者兼而有之。 resource pool:资源池 running tasks:运行的任务 max concurrent requests:最大并发请求 delay between requests:请求之间的延迟 tasks界面其他释译：running:正在运行的 paused:暂停的 finished:完成的 live passive crawl from proxy(all traffic):从代理模块实时被动的爬取-所有流量 add links.add item itself,same domain and urls in suite scope:添加链接，模块中同一域和网址添加的项目 capturing:捕捉 items added to site map:添加到网站地图的项目 responses processed:响应处理 responses queued:响应队列 live audit from proxy(all traffic):从代理的实时审计-所有流量 audit checks-passive:审计 被动式的检查 capturing:捕捉 issues:问题 requests:请求 errors:错误 event log:日志界面释译critical:危险的 error：错误的 info：信息 debug：调试 time：时间 type：类型 source:源 message:消息 issue activity:问题活动界面释译filter:过滤 high:高 medium:中 low:低 info：信息 certain:确定的 firm:稳定的 tentative:实验性、假设的 task:任务 time：时间 action:动作 issue type:问题类型 host:主机 advisory:报告 target模块：site map:网站地图过滤器:隐藏未找到的项目;隐藏CsS、图像和一般二进制内容;隐藏4 xx响应;隐藏空文件夹。 contents:内容 host:主机 method:方法 url：网址 request:请求 raw：原始数据 hex：十六进制 response:响应 raw：原始数据 hex：十六进制 issues:问题 advisory:报告 scope:范围target scope:目标范围 齿轮三项： restore defaults:恢复默认设置 load options:载入选项 save options:保存选项 释译：定义当前工作的范围内目标。这种信任会影响整个套件中工具的行为。最简单的方式配置范围是浏览到您的目标和使用上下文菜单在网站地图中去包括或排除URL路径。 use advanced scope control:使用高级范围控制 include in scope:包含的范围 add:添加 edit:编辑 remove:移除 paste url:粘贴网址 load:载入 enabled:允许的 prefix:前缀 excluded from scope:排除的范围 enabled:允许的 prefix:前缀 issue definitions:定义的问题齿清单包含Burp Scanner可以检测到的所有问题的定义。 下面是一些漏洞定义，不释译。右边栏是漏洞的描述等，有以下关键词： description:描述 remediation:整改 vulnerability classifications:脆弱性分类 typical severity:严重性 type index:类型代码 proxy模块：代理模块intercept:拦截forward:允许 drop:丢弃 intercept is on/off:开启/关闭拦截 action:动作--参考Repeater栏的action。 raw：原始数据 hex：十六进制 comment this item:评论这个项目 http history:历史http过滤器:隐藏CSS，图像和一般的二进制内容 #：编号 host:主机 method:方法 url:网址 params:参数 edited:编辑 status:状态 length:长度 mime type:消息实体 extension:扩展 websockets history:网页接口历史过滤器：展示所有项目 #：编号 url：网址 direction:用法 edited:编辑 length:长度 comment:描述 ssl:SSL time：时间 listener port:监听端口 options：选项Proxy Listeners:代理监听项 齿轮三项： restore defaults:恢复默认设置 load options:载入选项 save options:保存选项 add:添加 edit:编辑 remove:移除 running:运行 interface:接口 invisible:隐藏 redirect:重定向 certificate:证书 Burp的每个安装都会生成自己的CA证书，代理侦听器在协商SSL连接时可以使用这些证书，你可以导入或者导出这些证书，以便在其他地方或者其他BURP中使用 import/export CA certificate:导入/导出CA证书 regenerate CA certificate:生成CA证书 intercept client requests:拦截客户端请求 齿轮三项： restore defaults:恢复默认设置 load options:载入选项 save options:保存选项 使用这些设置来控制在Intercept选项卡中拦截哪些请求进行查看和编辑。 intercept requests based on the following rules:根据以下规则拦截请求 add:添加 edit:编辑 remove:移除 up：上移 down:下移 enabled:允许的 operator:操作 match type:匹配类型 relationship:关联 condition:条件 automatically fix missing or superfluous new lines at end of request:在请求结束时自动修复丢失或多余的新行 automatically update content-length header when the request is edited:当请求被编辑时，自动更新头部的内容长度字段 ----------------- intercept server responses:拦截服务器响应 齿轮三项： restore defaults:恢复默认设置 load options:载入选项 save options:保存选项 使用这些设置来控制在Intercept选项卡中拦截哪些响应进行查看和编辑。 intercept responses based on the following rules:根据以下规则拦截响应 add:添加 edit:编辑 remove:移除 up：上移 down:下移 enabled:允许的 operator:操作 match type:匹配类型 relationship:关联 condition:条件 automatically update content-length header when the request is edited:当响应被编辑时，自动更新头部的内容长度字段 ----------------- intercept websockets messages:拦截网页接口消息 intercept client-to-server messages:拦截客户端到服务器的消息 intercept server-to-client messages:拦截服务器到客户端的消息 ----------------- responses modification:响应修改 这些设置用来执行响应自动修改 unhide hidden form fields:取消隐藏表单字段 prominently highlight unhidden fields:高亮显示未隐藏的字段 enable disabled form fields:启用被禁用的表单字段 remove input field length limits:移除输入字段长度限制 remove javascript form validation:移除表单验证的JS remove all javascript:移除所有JS remove &lt;object&gt; tags:移除网页标签 convert https links to http:将https转为http remove secure flag from cookies:移除cookies的安全标志 ----------------- match and replace:匹配和替换 这些设置用于自动替换通过代理传递的请求和响应的部分 add:添加 edit:编辑 remove:移除 up：上移 down:下移 enabled:允许的 item:项目 match:匹配 replace:替换 type:类型 comment:描述 ----------------- ssl pass through:ssl通过 存疑：这些设置用于BURP将会直接放行通过SSL连接的特殊目标服务器(web)，在代理拦截视图和历史中将不会有关于通过这些连接的请求和响应的详细信息 add:添加 edit:编辑 remove:移除 paste url:粘贴网址 load:载入 enable:允许 host/IP range:主机/IP列表 port:端口 automatically add entires on client SSL negotiation failure:在客户端协商SSL失败时自动添加实体 ----------------- miscellaneous:混杂项 use http/1.0 in requests to server:在向服务器发送请求使用http/1.0协议 use http/1.0 in requests to client:在向客户端发送请求使用http/1.0协议 set response header &quot;Connection:close&quot;:在响应头部设置&quot;Connection:close&quot; set &quot;Connection close&quot; on incoming requests:对传入的请求设置：&quot;Connection close&quot; strip Proxy-* headers in incoming requests:删除传入请求头部的Proxy-* remove unsupported encoding from Accept-Encoding headers in incoming requests:移除传入请求Accept-Encoding字段中不支持的编码 strip Sec-WebSocket-Extensions headers in incoming requests:删除传入请求头部的Sec-WebSocket-Extensions unpack gzip/deflate in requests:在请求中解压 unpack gzip/deflate in responses:在响应中解压 disabled web interface at http://burp:禁止http://burp的web接口 suppress Burp error messages in browser:在浏览器中禁止Burp错误消息 don&apos;t send items to Proxy history or other Burp tools:不向代理历史和其他Burp工具发送项目 don&apos;t send items to Proxy history or other Burp tools,if out of scope:如果超出范围，不向代理历史和其他Burp工具发送项目 intruder模块：入侵模块target：目标attack target:攻击目标 start attack:开始攻击 host:主机 port:端口 use https:使用HTTPS positions:位置payload positions:载荷位置 start attack:开始攻击 配置载荷位置将会插入到基本的请求中，攻击类型决定了有效载荷分配到有效载荷位置的方式，查看帮助获取详细信息 attack type:攻击类型 sniper:狙击模式：单个变量进行破解，多个标记依次进行 battering ram:冲车模式：多个变量同时进行 pitchfork:叉式攻击：每一个变量标记对应一个字典，取每个字典的对应项 cluster bomb:子母弹模式：每个变量对应一个字典，并且交叉破解，尝试各种组合(适用用户名+密码的破解) add$:添加变量位置 clear$:清除变量位置 auto$:自动标记变量位置 refresh:刷新代码区域 clear:清除所有变量标记 payloads:载荷payload sets:载荷设置 您可以定义一个或多个载荷集。载荷集合的数量取决于position选项卡中定义的攻击类型。每种载荷集都有各种载荷类型，并且可以用不同的方式定制每种载荷类型。 payload set:载荷设置 payload type:载荷类型(部分存疑) simple list:简单列表 runtime file:运行文件 custom iterator:自定义的迭代器 character substitution:字符替换 case modification:大小写替换 recursive grep:递归查询 illegal unicode:非法字符 character blocks:字符块 numbers:数字 dates:日期 brute forcer:暴力破解 null payloads:空载荷 character frobber:字符XXX bit flipper:位反转 username generator:用户名生成 ECB block shuffler:随机ECB块？？ extension-generated:扩展生成器 copy other payload:复制其他荷载 ----------------- payload options:载荷选项 simple list: 此有效负载类型允许您配置用作有效负载的简单字符串列表 paste：粘贴 load：zairu remove：移除 clear：清除 add:添加 add from list:从下列列表中添加 runtime file:运行文件 此有效负载类型允许您配置一个文件，以便在运行时从该文件读取有效负载字符串 select file:选择文件 custom iterator:自定义的迭代器 这种有效负载类型允许您配置多个项目列表，并使用列表中的所有项目排列生成有效负载。 position:位置 clear all:清除所有 list items for position 1:列出位置1的项目 paste:粘贴 load ：载入 remove:移除 clear:清除 add :添加 add from list:从列表添加 separtator for position 1:位置1的分隔符 preset schemes:预设方案 choose a preset schemes:选择一个预设方案 directories/files extensions:字典/文件扩展 two-digit hex:两位十六进制 passwords + digit:密码+数字 character substitution:字符替换 此有效负载类型允许您配置字符串列表，并对每个项应用各种字符替换。 character substitutions:字符替换 case sensitive match:区分大小写的匹配 items:项目 paste:粘贴 load ：载入 remove:移除 clear:清除 add :添加 add from list:从列表添加 case modification:大小写替换 这种有效负载类型允许您配置字符串列表，并对每个项应用各种大小写修改。 case modification:大小写替换 no change:无改变 to lower case:转换为小写 to upper case:转换为大写 to propername:首字母转换为小写 to ProperName:首字母转换为大写 items:项目 paste:粘贴 load ：载入 remove:移除 clear:清除 add :添加 add from list:从列表添加 recursive grep:递归过滤？ 此有效负载类型允许您从攻击中对前一个请求的响应中提取每个有效负载。 它在某些情况下非常有用，你需要递归地工作来提取有用的数据或交付一个漏洞。 提取grep项可以在options标签中定义。 select the &quot;extract grep&quot; item from which to derive payloads:选择“extract grep”项，从中派生有效荷载 initial payload for first request:第一个请求的初始有效载荷 stop if duplicate payload found:如果发现重复的负载,停止运行 illegal unicode:非法字符 此有效负载类型可用于生成字符的非法字符表示，它有时可以有效地绕过设计来阻止某些字符的过滤器。-有关每个选项的详细信息，请参阅完整帮助。 overlong UTF-8 encodings:超长UTF-8编码 maximum length:最大长度 illegal UTF-8 continuation bytes:非法的UTF-8连续字节 do illegal UTF-8:转换为非法UTF-8 maximize permutations in multi-byte encodings:最大化多字节编码的排列 illegal hex characters:非法十六进制字符 do illegal hex:转化为非法十六进制 maximize permutations in multi-byte encodings:最大化多字节编码的排列 hex formatting:十六进制格式 use lower case alpha characters:使用小写字母 add % prefix before each byte:在每个字节前添加%前缀 total encodings:总体编码 estimated encodings:预估编码 stop at maximum:在最大值为...时停止 match / replace in list items :匹配/替换在列表中的项 match character:匹配字符 replace with encodings of :用..编码替换 items:项目 paste:粘贴 load ：载入 remove:移除 clear:清除 add :添加 add from list:从列表添加 character blocks:字符块 此有效负载类型基于指定字符或字符串的块生成有效负载。它可以有效地检测缓冲区溢出并利用一些逻辑缺陷。 base string:基础字符 min length:最小长度 max length:最大长度 step:每一次递增长度 numbers:数字 此有效负载类型在给定范围内以指定格式生成数值有效负载。 number range:数值范围 type:类型 sequential:连续的 random:随机的 from：从..开始 to：到..结束 step：每一次递增值 how many：多少次 number format:数值格式 base:基础格式 decimal:十进制 hex:十六进制 min integer digits:最小整数值 max integer digits:最大整数值 min fraction digits:最小浮点数值 max fraction digits:最大浮点数值 examples:例子 dates:日期 此有效负载类型在给定范围内以指定格式生成日期有效负载 from：从..开始(从上到下依次为1到12月) to：到..结束 step：每一次递增值 format:格式 brute forcer:暴力破解 此有效负载类型生成指定长度的有效负载，其中包含指定字符集的所有排列 character set:字符设置 min length:最小长度 max length:最大长度 null payloads:空载荷 此有效负载类型生成有效负载，其值为空字符串，如果没有指定有效载荷标记，则可以使用该标记重复发出未修改的基本请求。 generate:生成 payloads:荷载 continue indefinitely:无限制的继续 character frobber:字符盗取？？ 此有效负载类型对字符串输入进行操作，并依次修改每个字符位置的值。t对于快速测试长字符串的哪些部分对应用程序的处理有影响非常有用。 operate on:对..起作用 base value of payload position:有效载荷位置的基值 specific string:特殊字符 bit flipper:位反转 这种有效载荷类型对输入进行操作，并依次修改每个位位置的值，它有时可用于有意义地修改cbc加密数据的解密值，并可能干扰应用程序逻辑。 operate on:对..起作用 base value of payload position:有效载荷位置的基值 specific string:特殊字符 format of original data:原始数据格式 literal value:文字值 encoded as ASCII hex：ASCII十六进制编码 select bits to flip:选择要翻转的位 username generator:用户名生成 此有效负载类型允许您配置名称或电子邮件地址列表，并使用各种常见模式从这些列表派生潜在用户名。 您可以输入项目为“firstname lastname”或“firstname.lastname@example.org”。 maximum payloads per item:每个项目的最大有效荷载 items:项目 paste:粘贴 load ：载入 remove:移除 clear:清除 add :添加 ECB block shuffler:随机ECB块？？ 这种有效负载类型可用于在ecb加密的数据中打乱密文块，从而有意义地修改解密的明文，并可能干扰应用程序逻辑。 您可以选择提供使用相同密码和密钥的加密字符串列表，以提供用于混洗加密数据的其他块。 encrypted data to shuffle:要加密的加密数据 base value of payload position:有效负载位置的基值 specific string:特殊字符串 format of original data:原始数据的格式 literal value:原始数据的文字值 encode as ASCII hex:用ASCII十六进制进行编码 block size(usually 8 or 16):块大小(通常是8或者16) additional encrypted strings - optional:其他加密字符串-可选项 paste:粘贴 load ：载入 remove:移除 clear:清除 add :添加 extension-generated:扩展生成器 此有效内容类型调用Burp扩展以生成有效负载 selected generator:选择生成器 copy other payload:复制其他荷载 此有效负载类型将当前有效负载的值复制到另一个有效负载位置。它可以用于具有多个有效负载集的攻击类型 copy from position:从..位置复制 ----------------- payload processing:载荷处理 您可以定义规则在使用每个载荷之前对其进行处理，进行编码、加密等 add:添加 add prefix:添加前缀 add suffix:添加后缀 match/replace:匹配/替换 substring:子串提取 reverse substring:从末尾计数的子串提取 modify case:以相同模式修改载荷 encode:编码 decode:解码 hash:求hash值 add raw payload:添加原始载荷 skip if matches regex:跳过通过正则的匹配项 invoke burp extension:调用BURP的扩展插件 edit:编辑 remove:移除 up:想上移动 down:下移 ----------------- payload encoding:载荷编码 你可以配置那些载荷中的字符需要进行URL编码，以保证器安全传输 URL-encode these characters:对这些字符进行URL编码 options：选项request headers:请求头部 这些设置控制在攻击中是否更新Intruder中请求头的配置 update Content-Lenght header:更新头部内容长度字段 set Connection:close:设置Connection:close ----------------- request engine:请求引擎 设置请求发送的线程、超时重试等 number of threads:线程数量 number of retries on network failure:网络失败的重试次数 pause before retry(milliseconds):重试前等待时间(毫秒) throttle(milliseconds):延迟(两个请求之间的延迟)(毫秒) fixed:固定值 variable:变化值 start:从...开始 step:递增值？变化值？ start time:开始时间 immediately:立即 in .. minutes:在..分钟内 paused:暂停 ----------------- attack results:攻击结果 这些设置控制捕获那些攻击结果 store requests:存储请求 store responses:存储响应 make unmodified baseline request:未修改的基本请求 use denial-of-service mode(no results):使用拒绝服务模式 store full payloads:保存完整的载荷 ----------------- grep-match:过滤匹配 在响应中找出存在指定内容的项 flag result items with responses matching these expressions:标记具有这些表达式的结果项 paste：粘贴 load:载入 remove:移除 clear：清除 add：添加 match type:匹配类型 simple string:简单字符串 regex:正则表达式 case sensitive match:区分大小写的匹配 exclude http headers:排除http头 ----------------- grep-extract:过滤，提取(通过正则提取返回信息中的内容) 这些配置可以用来从攻击结果的响应字段中提取有用的信息 extract the following items from responses:从响应中提取下列项目 add:添加(会弹窗) 定义要提取的项的位置，在响应面板中选择该项将自动创建合适的配置，你也可以手动修改配置以确保其有效工作。 define start and end :定义开始和结束 start after expression:从...语句后开始 start at offset:从偏移量开始 end at delimiter:在定界符结束 end at fixed length:在固定的长度结束 extract from regex group:从正则表达式组提取 case sensitive:区分大小写 exclude http headers:排除http头 update config based on selection below:基于选择的内容更新配置 fetch response:提取响应 the request has not yet been issue - click &quot;fetch response&quot; to issue it :请求尚未被提取，点击XX提取它 edit:编辑 remove:移除 duplicate:复制 up：上移 down:下移 clear:清除 maximum capture length:最大抓取长度 ----------------- gerp-payloads:过滤载荷 这些设置可用于标记包含提交负载反射的结果项。 search responses for payload strings:在响应中搜索载荷 case sensitive match:区分大小写匹配 exclude http headers:排除http头 match against per-url-enabled payloads:匹配预编译的载荷 ----------------- redirections：允许重定向 这些设置控制Burp在执行攻击时如何处理重定向。 follow redirections:跟随重定向 never：从不 on-site only:仅在同一网站 in-scope only:仅在范围内 always:始终 process cookies in redirections；在重定向中处理cookie repeater模块:转发器模块go：运行，下一步，发送，继续等 cancel:放弃 request:请求 raw：原始数据 hex：十六进制 response:响应 raw：原始数据 sequencer模块：定序器模块live capture:实时捕获select live capture request:选择实时捕获的请求 从其他工具发送请求到这里来配置活动捕获。选择要使用的请求，配置下面的其他选项，然后单击“Start live capture”。 remove:移除 clear:清除 star live capture:开始实时捕获 token location within response:响应中的令牌位置 在响应中选择令牌出现的位置。 cookie:cookie form field:表单字段 custom location:自定义位置 live capture options:实时捕获选项 这些设置控制用于发出HTTP请求和在执行实时捕获时获取令牌的引擎 number of threads:线程数量 throttle between requests(milliseconds):两次请求间的延迟 ignore tokens whose length deviates by .. characters:忽略长度偏移..字节的令牌 manual load:手动载入manual load:手动载入 该方法允许您使用已经获得的令牌样本加载定序器，然后对该样本执行统计分析。 analyze now:现在分析 tokens load:令牌载入 shortest:最短的 longest:最长的 paste:粘贴 load:载入 clear:清除 analyze options:分析选项token handing:；令牌管理 这些设置控制在分析期间如何处理令牌。 pad short tokens at:在...填补短令牌 start：开始 end:结束 pad whith(single character or 2-digit ASCII hex code):用(单字符或者2位ASCII十六进制码)填补 base64-decode before analyze:分析之前用base64解码 token analysis:令牌分析(以下存疑) 下面的选项控制在字符级执行的分析类型。 count:计数(统计分析) transitions:转换(连续统计分析) 下面的选项控制在位级执行的分析类型。 FIPS monobit:按FIPS标准单比特分析 FIPS poker:按FIPS标准4个连续分组分析 FIPS runs:按FIPS标准将相同值连续分组分析 FIPS long run :按FIPS标准将相同值连续分组统计最长段分析 Spectral:光谱分析 correlation:关联性分析 compression:压缩分析 decode模块：编码模块decode as:用...解码 encode as:用...编码 Hash:计算hash值 comparer模块：比较模块这个功能允许您在不同的数据之间进行字或字节级的比较，您可以从其他工具加载、粘贴或发送数据到这里，然后选择要执行的比较 paste：粘贴 load:载入 remove:移除 clear：清除 compare:比较 words:字符 bytes:字节 Extender模块：扩展模块extensions:扩展burp extensions:burp扩展 扩展允许您使用自己的或第三方代码定制Burp的行为 add：添加 remove:移除 up:上移 dowm:下移 ----------------- detail:详细信息 extension loaded:载入的扩展 name:名称 Item:项目 detail：详细信息 output:输出 errors:错误信息 BApp store：BApp(编程调试软件)商店BApp Store包含由Burp Suite用户编写的Burp扩展，以扩展Burp的功能。 name:名称 installed:已安装 rating:评分等级 popularity:流行程度 last updated:最后更新时间 detail:详细信息 refresh list:刷新列表 manual install:手动安装 APIs:应用程序接口burp extender APIs:burp应用程序接口扩展 您可以使用Burp Extender APls创建自己的扩展来定制Burp的行为。 save interface files:保存接口文件 save javadoc files:保存java文档文件 options:选项settings:设置 这些设置控制Burp在启动时如何处理扩展。 automatically reload extensions on starup:启动是自动加载扩展 automatically update installed BApps on startup:启动时自动更新安装的BApp Java environment:Java环境 这些设置允许您为执行用java编写的扩展配置环境，如果您的扩展使用任何库，您可以指定库所在的文件夹，进行加载 folder for loading library JAR files(optional):加载JAR文件库库的文件夹(可选的) Python environment:Python环境 这些设置允许您为执行用Python编写的扩展配置环境。要使用Python扩展，您需要下载Jython，它是一个用Java实现的Python解释器。 location of Jython standalone JAR file:Jython文件位置 folder for loading modules(optional):加载模块文件夹(可选) Ruby environment:Ruby环境 通过这些设置，您可以确定执行用Ruby编写的扩展的环境。要使用Ruby扩展，您需要下载JRuby，它是一个用Java实现的Ruby解释器，注意，您可以在这里确定JRuby JAR文件的位置，也可以在启动时通过Java类路径加载JAR文件 location of JRuby JAR file:JRuby文件位置 project options：工程选项connections:连接platform authentication:平台认证 这些设置是在用户选项中指定的，但是可以在这里为这个特定的项目重写。 override user options:覆盖用户选项 upstream proxy servers:上游代理服务器 这些设置是在用户选项中指定的，但是可以在这里为这个特定的项目重写。 override user options:覆盖用户选项 socks proxy:socks代理 .... timeouts:超时 这些设置指定用于各种网络任务的超时时间。值以秒为单位。将选项设置为零或留空，则永远不超时。 normal:正常状态 open-ended responses:开放式的响应 domaon name resolution:域名解析 failed domain name resolution:域名解析失败 hostname resolution:主机解析 在这里添加条目来覆盖您的计算机的DNS解析。 out-of-scope requests:超出范围的请求 此功能可用于防止Burp发出任何超出范围的请求，包括通过代理发出的请求。 drop all out-of-scope requests:丢弃所有超出范围的请求 use suite scope [defined in target tab]:使用组件范围[在目标模块定义] use custom scope:使用定制的范围 Http：redirections:重定向 这些设置控制了Burp在被要求跟随重定向的情况下，能够知道跟随哪些重定向类型。 跟随以下类型的重定向： 3xx status code with location header:头部位置状态代码为3xx refresh header:刷新头部 meta refresh tag:元标识 JavaScript-driven:被动的js脚本 any status code with location header:头部位置任何状态码 ----------------- streaming responses:流媒体响应(分组响应) 这些设置用于指定url返回不确定流的响应。 代理将直接将这些响应传递给客户机。 转发器将在收到响应时更新响应面板，其他工具将忽略流响应。 为了查看Burp中流媒体响应的内容，您需要检查“存储流媒体响应”选项 use advanced scope control:使用高级范围控制 add:添加 edit：编辑 remove:移除 paste url:粘贴url load：载入 store streaming responses(may result in large temp files):存储流媒体响应(可能导致大的临时文件) strip chunked encoding metadata in streaming responses:在流响应中对元数据进行分块编码 ----------------- status 100 responses:状态为100的响应 这些设置控制Burp处理状态为100的HTTP响应的方式 understand 100 continue responses:理解状态码100的持续响应 remove 100 continue headers:移除状态码100的头部 SSL：SSL negotiation:SSL协商阶段 这些设置控制了Burp在与上游服务器执行SSL协商时将使用的SSL协议和密码。 如果您遇到SSL协商问题，你可以使用这些设置来请求使用特定的协议或密码。 请谨慎使用这些选项，因为错误配置可能会破坏您所有的SSL连接。 use the default protocols and ciphers of your java installation:使用Java安装的默认协议和密码 use custom protocols and ciphers:使用自定义的协议和密码 ------------------------------ SSL negotiation workarounds:SSL协商解决办法 automatically select compatible SSL parameters on negotiation failure:协商失败时自动选择兼容的SSL参数 allow unsafe renegotiation(required for some client certificates):允许不安全的重协商(某些客户端证书所需) disabled SSL session resume:禁用SSL会话恢复 client SSL certificates:客户端SSL证书 这些设置是在用户选项中配置的，但是可以在这里为这个特定的项目重写。 override user options:覆盖用户选项 server SSL certificates:服务器端证书 此面板显示从web服务器接收到的惟一SSL证书的列表。双击一个项目以显示证书的完整细节。 host:主机 name:名称 issuer:发行商 Sessions:会话session handing rules:会话处理规则 您可以定义会话处理规则，使Burp在发出HTTP请求时执行特定的操作。 每个规则都有一个定义的范围(用于特定的工具、url或参数), 能够执行诸如添加会话cookie、登录到应用程序或检查会话有效性等操作。 在每个请求发出之前，Burp按顺序应用请求范围内的每个规则 add:添加 edit:编辑 remove:移除 duplicate:复制 up:上移 down:下移 enable:允许 description:描述 tools:工具 要监视或排除会话处理规则的行为，可以使用sessions tracer详细查看处理每个规则的结果。 open sessions tracer:打开会话跟踪 ----------------- cookie jar: Burp维护一个cookie jar，它存储访问过的网站发出的所有cookie. 会话处理规则可以使用和更新这些cookie来维护正在测试的应用程序的有效会话. 您可以使用下面的设置来控制burp如何根据来自特定工具的流量自动更新cookie jar。 监控以下工具的流量来更新cookie jar: proxy:代理 scanner：扫描 repeater:转发器 spider:爬行、蜘蛛 intruder:入侵 sequencer:定序器 extender:扩展 open cookie jar:打开cookie jar ----------------- Macros：宏指令 宏是一个或多个请求的序列，您可以在会话处理规则中使用宏执行任务，例如登录到应用程序，获取反csrf令牌等 add:添加 edit:编辑 remove:移除 duplicate:复制 up:上移 down:下移 Misc:混杂项schedule tasks:计划任务 这些设置允许您指定burp将在指定的时间或间隔自动执行的任务。 add:添加 edit:编辑 remove:移除 time:时间 repeat:重复次数 task:任务 ----------------- burp collaborator server:burp合作服务器 Burp Collaborator是一个外部服务，Burp可以使用它来帮助发现多种漏洞。您可以使用PortSwigger提供的默认合作者服务器，或者部署自己的。 您应该阅读该特性的完整文档，并决定哪个选项最适合您。 use the default collaborator server:使用默认的合作服务器 Don&apos;t use burp collaborator:不使用burp合作模式 use a private collaborator server:使用私人的合作服务器 serv location:服务器地址 polling location(optional):轮流变换地址(可选择) poll over unencrypted HTTP:在未加密的HTTP上轮流变换 run health check:运行健康检查 ----------------- logging:日志记录 这些设置控制HTTP请求和响应的日志记录 all tools：所有工具 proxy:代理 intruder:入侵 repeater:转发器 sequencer:定序器 extender:扩展 requests:请求 responses:响应 user options:用户选项connections:连接platform authentication:平台认证 这些设置允许您配置Burp来自动对目标web服务器执行平台身份验证。 注意:可以为项目选项中的单个项目重写这些设置 do platform authentication:配置平台认证 add:添加 edit:编辑 remove:移除 destination host:目的主机 type：类型 username:用户名 domain：域名 domain hostname:域的主机名 prompt for credentials on platform authentication failure:在平台身份验证失败时提示凭据 ----------------- upstream proxy servers:上游代理服务器 以下规则确定Burp是将每个传出请求发送到代理服务器，还是直接发送到目标web服务器。 使用匹配每个目标主机的第一个规则，要将所有流量发送到单个代理服务器，请创建一个以*作为目标主机的规则。 注意:可以为项目选项中的单个项目重写这些设置 add:添加 edit:编辑 remove:移除 up:上移 down:下移 enable:允许 destination host:目标主机 proxy host:代理主机 proxy port：代理端口 auth type:授权类型 username:用户名 ----------------- SOCKS proxy：SOCKS代理 这些设置允许您配置Burp来使用SOCKS代理。此设置应用于TCP级别，所有出站请求都将通过此代理发送 如果你也在上游HTTP代理服务器上配置了规则，对上游代理的请求将通过此处配置的SOCKS代理发送 注意:可以为项目选项中的单个项目重写这些设置。 use SOCKS proxy :使用SOCKS代理 SOCKS proxy host:SOCKS代理主机 SOCKS proxy port:SOCKS代理端口 username:用户名 password:密码 do DNS lookup over SOCKS proxy :在SOCKS代理上进行DNS查找 SSL：JAVA SSL Options：JAVA SSL选项 这些设置可用于启用成功连接到某些服务器可能需要的某些SSL特性。 enable algorithms blocked by Java security policy(requires restart):启用被Java安全策略阻塞的算法(需要重新启动) disable Java SNI extension(requires restart):禁用Java SNI扩展(需要重新启动) ----------------- Client SSL Certificates:客户端SSL证书 这些设置允许您确定当目标主机请求客户端SSL证书时，Burp将使用的客户端SSL证书 Burp将使用列表中的第一个证书，该证书的主机配置与所联系主机的名称匹配 您可以双击一个项目来查看证书的完整细节。 注意:可以为项目选项中的单个项目重写这些设置。 add:添加 remove:移除 up:上移 down:下移 enable:允许 host:主机 type:类型 alias:别名 subject:主题、科目 issuer:发行商 key:密钥 Display：展示user interface:用户接口 这些设置允许您控制Burp的用户界面外观。 font size:字体大小 look and feel:外观和感受 HTTP Messages Display：HTTP消息展示 这些设置允许您控制如何在原始HTTP查看器/编辑器中显示HTTP消息。 font:字体 highlight request parameters:高亮显示请求参数 highlight responses syntax:高亮显示相应语法 analyze and display AMF messages(use with caution):分析和显示AMF消息(谨慎使用) character sets:字符设置 这些设置现在控制Burp在显示原始HTTP消息时处理不同的字符集。注意，有些字形不支持所有的字体。 如果您需要使用扩展的或不常见的字符集，您应该首先尝试系统字体，如Courier New或Dialog recognize automatically based on message headers:基于消息头自动识别 use the platform default(GBK):使用平台默认编码 display as raw bytes:显示为原始字节 use a specific character set:使用特定的字符集 HTML rendering:HTML透视图？渲染？ 这些设置控制Burp如何处理HTML内容的工具内呈现 allow renderer to make HTTP requests(for image,etc.):允许渲染器发出HTTP请求(用于图像等) Misc：混杂项Hotkeys:快捷键/热键 这些设置允许您为常见的操作确定热键。这些包括特定于项目的操作，如“发送到中继器”，-全局操作，如“切换到代理”，以及编辑器内的操作，如“剪切”和“撤消” action:动作 hotkeys:快捷键/热键 edit hotkeys:编辑快捷键 automatic project backup[disk project only]:自动备份项目[仅磁盘项目] 自动项目备份定期在后台保存Burp项目文件的副本。 automatically back up the project every .. minutes:每..分钟自动备份项目 include in-scope items only :只包含范围内的项 show progress dialog during backups:在备份期间显示进度对话框 delete backup file on clean shutdown of burp:在清除并关闭burp时删除备份文件在 temporary files location:临时文件位置 这些设置允许您配置Burp存储临时文件的位置。改变将在下次启用Burp时开始生效 use default system temp directory:使用默认的系统临时文件夹 use custom location:使用自定义的位置 ----------------- REST API :应用编程接口 其他工具可以使用REST API与Burp套件集成!该函数公开敏感的功能和数据，在启用该服务之前，您应该阅读完整的文档。 一旦配置好，您就可以浏览API文档并与APl在[service URL]/[API key]进行交互 service URL:服务网址 service running:运行服务 allow access without API key(using this option is not secure):允许在没有API密钥的情况下访问(使用此选项不安全) ----------------- API keys：API密钥 new：新的 API密钥是秘密，应该小心处理。创建现有API密钥之后，无法从Burp检索它 copy key to cliboard:复制密钥到剪贴板 edit：编辑 delete：删除 enable：允许 name：名称 created:创建者 ----------------- Proxy Interception:代理拦截 此设置控制在启动时代理截取的状态。 enable interception at startup:在启动时允许拦截 always enable:总是允许 always disable:总是不允许 restore setting from when Burp was last closed:恢复Burp上次关闭时的设置 Proxy History logging:代理历史日志记录 该设置控制向目标范围添加项目是否会自动设置代理选项，以停止向历史记录或其他Burp工具发送超出范围的项目 when items are added to target scope:当项目被添加到范围内时 stop sending out-of-scope items to proxy history and other Burp tools:停止向历史记录或其他Burp工具发送超出范围的项目 prompt for action:迅速采取行动 do nothing :不做任何操作 Performance Feedback:使用反馈 你可以通过提交关于Burp表现的匿名反馈来帮助改善Burp。 submit anonymous feedback about burp&apos;s performance:提交关于Burp表现的匿名反馈 反馈只包含有关打嗝的内部功能的技术信息，并不以任何方式识别你。 如果您通过邮件报告错误，通过包含调试ID，您可以帮助我们诊断Burp实例遇到的任何问题 ————————————————完结—————————————————–]]></content>
      <categories>
        <category>渗透测试工具</category>
      </categories>
      <tags>
        <tag>BurpSuite</tag>
        <tag>翻译</tag>
        <tag>BurpSuite介绍</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux安装软件]]></title>
    <url>%2F2019%2F03%2F05%2F%E5%9C%A8Linux%E4%B8%8B%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[Linux下的安装包封装后的软件包：后缀.rpm(红帽公司的安装包)；后缀.deb debian操作系统的软件包 优点：安装方便 缺点：不可以指定安装路径，不可以定制安装功能，更新速度慢 未封装的源码包：GNU社区 优点：可以修改源代码，可以指定安装位置，可以定制安装功能模块，更新速度快,可以跨平台安装 缺点：安装过于繁琐，安装方式不统一 源码安装过程1.解压缩后找到configure 指定安装路径，指定安装功能模块，产生Makefile文件 其中configure文件中的一些解释： --prefix：指定安装目录 enable：默认不安装 disable：默认安装 Makefile文件： 将源代码编译成二进制文件 2.# ./configure --help 查看configure文件内容 # ./configure --prefix=/usr/local/webserver 执行安装包的提取，生成Makefile文件 3.# make 让Makefile文件执行操作 4.# make install 安装完成后： 1.# cd /usr/local 跳转到安装目录（/webserver/bin） 2.# ./apachectl start 启动http服务 3.# netstat -antpul | grep 80 查看80端口 4.# ifconfig 网络接口配置,查看网卡配置 桥接 5.# ifconfig eth0 IP地址 netmask 子网掩码 设置网卡 6./usr/local/webserver/bin/apachectl start|stop 具体路径 8./usr/local/webserver/htdocs/index.html 主页路径 删除软件：直接把安装目录删除 假若又不想删除的：# rm -rf !man.* 表示除man.类型的文件，其他的都删除 封装好的安装包的安装在media目录下的Centos下有很多安装包 .rpm：redhat package # ls | grep lftp 找到lftp的安装包 # rpm -qa|grep lftp 查看系统是否安装lftp # rpm -qpi 包.rpm 列出软件包的详细信息 # rpm -qpl 包.rpm 列出软件包的安装文件及目录 # rpm -ivh 包.rpm 安装软件 # rpm -qf 命令字 查看命令字来源于那个软件 # lftp -u username,userpasswd ftp IP地址 连接FTP服务器 help 获取帮助信息 get 文件名 下载文件 lcd /路径 改变当前工作目录 卸载： # rpm -e 软件名 卸载软件 rpm包的依赖关系rpm包不能独立存在，有的包之间有依赖关系，不能独立安装和卸载 依赖文件目录：/media/CentOS/Packages/repodata 解决依赖关系安装和卸载软件： 通过建立yum源文件安装软件 yum：通过连接软件包之间的依赖关系列表，从而起到安装软件的作用 1、写yum源配置文件 # cd /etc/yum.repos.d/ yum源文件的存放目录 # mkdir bak 新建目录，准备备份源文件 # mv C* bak 备份源文件 # vim 3class.repo 配置yum源文件（注意后缀必须写明） [dvd] 标签:随便写 name=dvdrom yumlist 描述：写明作用 baseurl=file:/misc/cd 位置:yum源的位置（其中注意：/misc/cd） gpgcheck=0 安全监测关闭 # yum install 软件名 安装软件 # yum remove 软件名 卸载软件 # yum install 软件名 -y 默认所有选择都选择y执行安装 # yum clean all 清除yum源的缓存]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>安装软件</tag>
        <tag>yum源安装软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[远程交互式shell]]></title>
    <url>%2F2019%2F03%2F05%2F%E8%BF%9C%E7%A8%8B%E4%BA%A4%E4%BA%92%E5%BC%8Fshell%2F</url>
    <content type="text"><![CDATA[安装软件yum install expect 脚本语言 &quot;注意：空格的问题&quot; #!/usr/bin/expect set timeout 30(-1：永不过期) spawn ssh 用户名@IP &quot;执行的操作&quot; expect &quot;第一种情况&quot; { 操作：send &quot;需要发送的信息\r&quot; expect &quot;子情况&quot; 子操作：send &quot;需要发送的信息\r&quot; } &quot;第二种情况&quot; { 操作：send &quot;需要发送的信息\r&quot; } interact ---执行完成后把控制台交个当前bash $argv --获取变量 嵌套： #!/bin/bash expect &lt;&lt; EOF(end of file) ...(expect脚本语言) expect eof EOF 一个实例#!/bin/bash for IP in 100 1 2 3 do IPADDR=192.168.0.$IP expect &lt;&lt; EOF spawn ssh root@$IPADDR &quot;sed -i &apos;1i nameserver 8.8.8.8&apos; /etc/resolv.conf&quot; expect &quot;(yes/no)?&quot; { send &quot;yes\r&quot; expect &quot;passwd:&quot; send &quot;password\r&quot; } expect &quot;passwd:&quot; { send &quot;password\r&quot; } expect eof EOF --结束expect解释器，必须和do缩进一样 done]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>远程交互</tag>
        <tag>SHELL脚本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用户及ACL]]></title>
    <url>%2F2019%2F03%2F05%2F%E7%94%A8%E6%88%B7%E5%8F%8AACL%2F</url>
    <content type="text"><![CDATA[用户分类超级用户：root（唯一标示：uid=0）普通用户：可以登录系统，权限没有root用户高；可以创建自己的文件，辅助管理系统（uid=500~6000）程序用户：（uid=1~499），不可以登录系统 用户文件详解/etc/passwd：记录系统中所有用户信息 root:x:0:0:root:/root:/bin/bash 以：为分隔符，为字段 字段一：用户名 字段二：密码占位符 字段三：udi 字段四：gid（用户基本组） 字段五：用户信息（包括用户全名，电话，信息等） 字段六：用户的家目录 字段七：用户的登录shell /etc/shadow：记录用户的密码信息 root:乱码:17098:0:99999:7::: 字段一：用户名 字段二：sha-512加密后的密文 字段三：天数距离1970年1月1日密码最近一次修改的时间 字段四：密码的最短有效期（n天内不能改密码，0是不限制，随时可以改） 字段五：密码的最长有效期（99999：无限期） 字段六：密码过期前7天提醒 字段七：密码的不活跃期（5：密码过期后5天内还能使用） 字段八：用户的失效时间（距离1970年1月1日） 字段九： /etc/group：组信息 root:x:0: 字段一：组名 字段二：密码占位符 字段三：组id 字段四：改组中的附加用户 常用命令登入其他用户：Ctrl+Alt+F2 退出登录界面：Ctrl+Alt+F1 查看用户的信息：id 用户名 切换用户：su 用户名 useradd 建立用户 -u：指定用户的uid -g：指定用户的组 -G：指定用户的附加组 -s：指定用户登录shell -M：不建立用户家目录 -d：指定用户家目录（不存在的目录） 程序用户：game #useradd -u 250 -M -s /sbin/nologin game 基本组：雪豹 gid 1000 #group -g 1000 xuebao 普通用户：ccg 600 附加组：root #useradd -u 600 -g xuebao -G root ccg groupadd 建立组 -g：指定gid号 passwd 为用户建立密码 -S：查看用户密码状态 -l：锁定用户 -u：解锁用户 usermod 修改用户 useradd的选项也适合 -L：锁定用户 -U：解锁用户 userdel 删除用户 -r：删除用户的所有文件包括家目录 groupdel 删除组 groupmod 修改组信息 -g：修改gid gpasswd 为组中添加附加用户 -a 添加 Linux中文件权限ls -l 查看文件的信息 中间两个root： 第一个：所属者 第二个：所属组 root前面的数字： 对于文件：代表这个文件有多少个硬链接 对于目录：代表这个目录中有所少个子目录 权限块：- --- --- ---（从左向右查询权限） 第一位：文件的类型（-：普通文件；d：目录；l：符号连接；b：块设备） 第二三四位：文件所有者的权限（r：读取；w:写入；x:执行；-：无权限） 对目录：r：列出目录；w:可以增删文件；x：可以进入该目录 第五六七位：文件所属组的权限 第八九十位：其他用户对文件的权限 能不能删除文件：看目录权限 chmod o：对象 +：运算符 权限 改变文件或者目录的权限 #chmod g+w test.txt 对象：u:user；g:group；o：other；a：all 运算符：+：添加；-删除；=：指定（会让原来的权限失效） 用八进制换算文件权限： #chmod 777 test.txt 给属主，属组，其他用户赋予读写执行的权限 普通文件：644 目录文件：755 改变文件属组chown 用户名 文件名 将文件的所属者改成另一个用户（一般用root身份改） chgrp 组名 文件名 将文件的所属组改成另一个组：用root身份 chown [用户名]:[组名] 文件名 同时修改所属者和所属组 特殊权限设置#which 命令字 查询该命令的文件位置 粘滞位：一般作用域目录，是目录中的文件只能谁创建谁删除（root除外） 命令：chmod o+t 目录 chmod 1777 目录 sgid：作用于目录，该目录下所建立的文件和目录，强制继承该目录的组 命令：chmod g+s 目录 chmod 4777 目录 suid:作用于可执行文件，使文件拥有者的身份运行该文件 命令：chmod u+s 文件 设置文件的ACL： 命令：setfacl 设置文件访问控制 getfacl 文件 查看文件访问控制列表 seetfacl -m:修改|-x：撤销 u：用户名：权限（撤销的时候不需要） 文件 设置访问控制列表]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>用户</tag>
        <tag>ACL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文件系统、硬盘系统]]></title>
    <url>%2F2019%2F03%2F05%2F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E3%80%81%E7%A3%81%E7%9B%98%2F</url>
    <content type="text"><![CDATA[LINUX文件系统主分区：sda1 扩展分区：sda2-4 逻辑分区：sda5-- ext4:文件系统，扩展文件系统；支持单个文件容量大，设定日志记录 swap：交换文件系统，交换分区；不用来存储文件，虚拟内存，内存的1-1.5倍之间 命令：# df -Th 查看系统分区的使用情况 fdisk命令# fdisk /dev/sdb 打开磁盘管理器 l 显示磁盘信息 n 创建一个新的分区 d 删除分区 p 列出分区表 w 保存并退出 q 不保存退出 t 改变分区的标示符 # cat /proc/partitions 查看分区表详细信息 分区中详细信息分区： inode区：节点区（有限）；存放文件的数量 block区：块区；存放文件内容 格式化文件系统： # mkfs.ext4 /dev/sdb1 格式化成ext4的文件系统 -b 块大小（字节：4096） # mkfs.vfat -F 32 /dev/sdb5 格式成fat32文件系统 # mkswap /dev/sdb6 格式成swap文件系统 挂载：（临时） # mount 设备 挂载点 # mkdir /mnt/{ext4，fat32} 建立挂载点 # mount /dev/sdb1 /mnt/ext4 挂载分区 # cd / 退出文件系统 # umount /dev/sdb1 卸载目录（如果不退出文件系统，不能卸载） 挂载swap： # free -m 查看内存的使用状态 # swapon /dev/sdb6 挂载交换分区 # swapoff /dev/sdb6 卸载交换分区 # swapon -s 查看挂载交换分区信息 永久挂载/etc/fstab 文件系统列表，决定设备和目录之间的挂载信息 第一列：设备 第二列：挂载点（swap：swap） 第三列：文件系统类型（fat32：vfat） 第四列：挂载属性（一般：defaults） 第五列：是否支持宕机状态下的日志记录（一般：0） 第六列：是否支持开机自检测（一般：0）[开机查看是否有这个设备，没有不开机] 命令： # mount 查看挂载设备 # mount -a 立即挂载fstab上的文件系统 # swapon -a 立即挂载所有的swap # blkid /dev/sdb1:[设备名] 查看设备的UUID 挂载iso文件建立iso文件： # mkisofs -r:文件保留原名 -o：输出文件 /tmp/boot.iso：输出的文件名 /boot：需要压缩的文件 # mount -o loop /tmp/boot.iso /mnt/iso 挂载iso文件 在写fstab的时候：挂载属性：defaults，loop LINUX文件系统的磁盘配额作用：限制用户存储文件的数量（inode区）和大小（block区） 建立磁盘配额 对即将挂载的磁盘添加支持配额的属性 在fstab文件下： 修改挂载属性为：defaults，usrquota，grpquota 生成记录用户配额和组配额信息的文件 命令： # quotacheck -ugcv /dev/sdb1 显示设备的配额信息 -u:user -g:group -c:create -v:详细信息 添加配额信息：jw 5个 3个的时候提示 jw 10M 5M的时候提示 # edquota -u jw：用户名 其中文件中的字段意义： filesystem：支持配额的设备 blocks：（0：没有存入任何数据） soft：容量警告值（0：不限制）5M hard：容量的峰值（0：不限制）10M inode：（0：一个文件都没存） soft：数量警告值 3 hard：数量的峰值 5 开启分区配额功能： # quotaon /dev/sdb1 开启磁盘配额 # quotaoff /dev/sdb1 关闭磁盘配额 开启用户的写权限 通过命令查看用户配额信息 # quota -u|-g jw 查看用户或者组的配额信息 # repquota /dev/sdb1 查看设备的配额信息 大于2T硬盘的分区#partx 自己查找]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>文件系统</tag>
        <tag>硬盘系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文件共享]]></title>
    <url>%2F2019%2F03%2F05%2F%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%2F</url>
    <content type="text"><![CDATA[samba协议端口：139和445 负责win主机和linux主机之间实现文件系统共享 微软： smb协议：服务消息协议 cifs协议：通用互联网文件系统协议 作用： 将自己模拟成一个win主机，共享自己的文件系统，给另外一台win主机 开启匿名登录 # yum install samba -y # /etc/samba/smb.conf 文件内： #号：描述 ;号：作用行 # mv smb.conf smb.conf.bak 备份源文件 # grep -v &quot;#&quot; smb.conf |grep -v &quot;;&quot; |egrep &quot;=|]&quot; &gt;smb.conf 把有用行导入新文件中 有用项： [global] workgroup=WORKGROUP :组 log file= :日志文件 max log= :日志文件多大时新建文件 security= :用什么身份登录 [home] :用户登录的时候能看见家目录 comment= :描述 browseable= :网上邻居是否课件 guest = ok :是否允许所有人访问等效于public writable= :是否可写入 [cetnosDVD] :显示的名字 comment= :描述，随便写 path = /misc/cd :文件路径 public = yes :允许谁进入系统 readonly = yes :只读打开 其中security= user：使用本地samba用户身份登录 share：支持匿名登录 server：另外一台linux用户名登录 domain：另外一台win主机用户名登录 在win主机： 运行：\\IP地址 开启本地用户登录新建文件夹 # mkdir /share # chmod o+w /share 新建用户 # useradd jw # passwd jw :给用户密码,可以不要 # smbpasswd -a jw ：给用户共享文件夹密码 修改smb配置文件 修改： security = user 继续向后添加： [sharedir] comment = share path = /share public = no valid users = jw,jw_1 readonly = yes write list = jw 重启服务 /etc/init.d/smb reload 删除链接记录(win主机) net use * /del 开启本地用户别名登录别名文件： /etc/samba/smbusers 本地用户 = 别名 修改配置文件 在[global]中添加 username map = /etc/samba/smbusers nfs服务负责linux和linux主机之间实现文件系统共享 依赖于RPC服务（远端调用服务） 需要安装： rpcbind软件（系统默认安装好的:111端口） nfs-utils软件（自己安装） 配置文件： /etc/exports 格式： /myshare *.simplexue.com.cn 共享给域 /myshare desktop[0-19].simplexue.com.cn /myshare 172.25.0.0/16 /myshare *.simplexue.com.cn(r),172.25.0.0/16(wr) /myshare 192.168.0.0（wr,no_root_squash） no_root_squash：允许对方使用root身份挂载 客户端连接 # showmount -e IP地址（192.168.0.1） 查看有哪些共享 # mkdir /mnt/nfs 挂载点 # mount 192.168.0.1：/share /mnt/nfs # vim /etc/resolv.conf 删除里面的内容 # mount 查看挂载 # cd /mnt/nfs # umount 实现永久挂载 # vim /etc/fstab 192.168.0.1:/share /mnt/nfs nfs defaults 0 0 # mount -a vsftpdftp服务文件共享 使用端口： 主动：20、21 被动：21、随机 21：用于控制连接 传输模式： 文本模式：ASCII模式 二进制模式：Binary模式 安装软件 yum install vsftpd -y /etc/init.d/vsftpd start 共享目录：/var/ftp/ 配置文件 /etc/vsftpd/vsftpd.conf 主配置文件 /etc/vsftpd/ftpusers 黑白名单（和userlist_deny） /etc/vsftpd/user_list 白名单 ftp用户类型： 匿名用户：anonymous、ftp 本地用户：服务器本身的用户家目录为共享目录 虚拟用户：使用独立账户面数据文件的使用户 常见的服务器： IIS、Server-U、Vsftp ftp的详细配置/var/ftp/pub：权限设置 全局配置 - listen=YES：是否以独立运行的方式监听服务 - listen_address=192.168.4.1：设置监听的IP 地址 - listen_port=21：设置监听FTP 服务的端口号 - write_enable=YES：是否启用写入权限 - download_enable＝YES：是否允许下载文件 - userlist_enable=YES：是否启用user_list 列表文件 - userlist_deny=YES：是否禁用user_list 中的用户 - max_clients=0：限制并发客户端连接数 - max_per_ip=0：限制同一IP 地址的并发连接数 - pam_service_name=vsftpd :验证用户身份的 - /var/ftp/pub=022:文件夹的权限的反掩码 - tcp_wrappers=YES 匿名FTP配置项 - anonymous_enable=YES：启用匿名访问 - anon_umask=022：匿名用户所上传文件的权限掩码 - anon_root=/var/ftp：匿名用户的FTP 根目录 - anon_upload_enable=YES：允许上传文件 - anon_mkdir_write_enable=YES：允许创建目录 - anon_other_write_enable=YES：开放其他写入权 - anon_max_rate=0：限制最大传输速率（字节/秒） 本地用户配置项 - local_enable=YES：是否启用本地系统用户 - local_umask=022：本地用户所上传文件的权限掩码 - local_root=/var/ftp：设置本地用户的FTP 根目录 - chroot_local_user=YES：是否将用户禁锢在主目录 - local_max_rate=0：限制最大传输速率（字节/秒） 被动模式开启端口设置 - pasv_min_port=最小端口号 - pasv_max_port=最大端口号]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>文件共享</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络IP地址配置]]></title>
    <url>%2F2019%2F03%2F05%2F%E7%BD%91%E7%BB%9CIP%E5%9C%B0%E5%9D%80%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[配置IP、子网掩码、网关、dns基本命令关闭NetworkManager服务 手动配IP地址 ifconfig 查看、配置网络地址 eth0 Ethernet：以太网卡，0：第一块... -a：查看所有网络接口的信息 ifconfig eth0 查看第一块网卡的信息 # ifconfig eth0 up|down 激活|禁用网卡 # ifup|ifdown eth0 激活|禁用网卡 # ifconfig eth0:0 IP地址 设置虚拟网络接口 # hostname 主机名 修改主机名（/etc/sysconfig/network:HOSTNAME=主机名） 配置过程给网卡配IP地址 # ifconfig eth0 192.168.200.xxx netmask 255.255.255.0 配置网关 # route -n 查看路由表 # route add default gw 192.168.200.1 添加一个默认网关 # route del default gw IP地址 删除网关 # route add -net IP地址/掩码位 gw IP地址 为某个网段单独配置网关 配置DNS 配置文件：/etc/resolv.conf 文件内容 nameserver 202.106.0.20 北京的DNS：202.106.0.20 # nslookup 域名 查看域名的解析IP地址 ping# traceroute 测试主机到主机之间经过的节点 # ping IP地址 -c：次数限制 -s：封包大小 -i：ping的间隔时间（最小：0.2） -W：超时实现（s） netstat查看系统端口使用状态 -a：显示所有服务 -n：用数字代替主机名 -t：查看tcp协议 -u：查看udp歇息 -p：显示pid号和进程名称 -l：查看监听端口 实现永久生效修改网络接口的配置文件 /etc/sysconfig/network-scripts/ifcfg-eth0 DEVICE=eth0 # 设备名 TYPE=Ethernet # 网卡类型 ONBOOT=yes # 是否支持network服务管理 BOOTPROTO=static|dhcp # 获取IP地址的方式 IPADDR=IP地址 # IP地址 NETMASK=子网掩码 # 子网掩码 GATEWAY=网关 # 网关 DNS1=dns # 主dns服务器 DNS2=dns # 副dns服务器 # service network restart 重启服务才能运行]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>IP地址配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日志服务器搭建]]></title>
    <url>%2F2019%2F03%2F05%2F%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[基本配置修改网卡名称eth0/etc/udev/rules.d/70-persistent-net.rules 开启内核路由功能/etc/sysctl.conf net.ipv4.ip_forward=1 # sysctl -p 开启路由功能 远程登录# ssh root@IP地址 /var/log/secure 日志作用：记录系统、程序运行时发生的各种事件，用于诊断、解决系统故障等 内核及系统日志 由syslog服务管理日志，日志格式相似 用户日志 记录系统用户登录及退出系统的相关信息 程序日志 由各种应用程序管理的日志文件，格式多样 日志记录配置文件/etc/rsyslog.conf 服务： 程序：/sbin/rsyslogd 保存：/var/log 分类： message：内核、公共消息日志 cron：计划任务日志 dmesg：系统引导日志 maillog：邮件系统日志 lastlog、secure、wtmp、btmp：用户登录日志 级别: 0-EMERG-紧急：导致主机系统不可用 1-ALERT-警告：必须马上采取措施解决 2-CRIT-严重：比较严重的情况 3-ERR-错误：运行出错 4-WARNING-提醒：可能影响系统的功能 5-NOTICE-注意：不会影响系统，但需要注意 6-INFO-信息：一般信息 7-DEBUG-调试：程序或系统调试信息 日志格式：时间标签 主机名 子系统：消息信息（/var/log/messages） 日志安全日志备份和归档 延长日志的保存期限 控制日志的访问权限 集中管理日志： 将服务器的日志发送到日志服务器统一管理 便于日子信息的统一收集、整理、分析 杜绝日志信息的意外丢失、恶意修改和删除 转发日志发送方配置文件： # vim /etc/rsyslog.conf 添加：*.* @@接收方的IP地址：端口号 开启：$ModLoad imtcp $InputTCPServerRun 514（在原来的配置文件中注释掉了） 重启：service rsyslog restart|/etc/init.d/rsyslog restart 接收方配置文件： # vim /etc/rsyslog.conf 开启：$ModLoad imtcp $InputTCPServerRun 514（在原来的配置文件中注释掉了） 扩展目录：/etc/resyslog.d/ 添加：主机名.conf 配置：：属性，比较操作符， “值” 记录地址 属性： fromhost：来源主机（域名） fromhost-ip：来源主机IP地址 msg：消息内容（消息关键字） hostname：内容主机（内容关键字） 操作符： contains：包括 isequal：等于 startwith：以...开头 例子： ：formhost-ip,isequal, &quot;192.168.0.1&quot; /var/log/client/192.168.0.1 重启：service rsyslog restart|/etc/init.d/rsyslog restart]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>日志服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开机服务和进程管理]]></title>
    <url>%2F2019%2F03%2F05%2F%E5%BC%80%E6%9C%BA%E5%8F%8A%E6%9C%8D%E5%8A%A1%E3%80%81%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[LINUX开机开机加电-BIOS（开机自检）-MBR引导-GRUB菜单-加载内核（kernel）-init进程初始化 init进程： 由linux内核加载运行/sbin/init程序 是系统中第一个进程 PID永远为1 init进程的配置文件/etc/inittab 配置默认运行级别 /etc/sysconfig/init 控制tty终端的开启数量、终端颜色方案 /etc/init/rcS.conf 加载rc.sysinit脚本，完成初始化任务 /etc/init/rc.conf 兼容脚本，负责各运行级别的调用处理 /etc/init/rcS-sulogin.conf 单用户模式启动/sbin/sushell环境 /etc/init/control-alt-delete.conf 控制终端下的ctrl+alt+del热键操作 /etc/init/start-ttys.conf 配置tty终端的开启数量、设备文件 /etc/init/tty.conf 控制tty终端的开启 系统默认启动级别0：关机状态，使用该级别时将会关闭计算机 1：单用户模式，不需要验证码即可登录系统，多用于系统维护 2：字符界面的多用户模式，不支持网络访问 3：字符界面的完整多用户模式，大多数服务器主机运行在次级别 4：未分配使用 5：图形化界面的多用户模式，提供了图形化桌面的操作环境 6：重新启动，使用该级别时将会重新启动系统 修改：/etc/inittab文件 id:3:initdefault: 设置默认启动级别为3级（字符级） 命令显示切换当前运行级别 # runlevel 临时切换运行级别 # init 0-6 控制系统服务： 通过服务控制： # service 服务名 控制类型 通过脚本控制： # /etc/init.d/服务名 控制类型 控制类型： start：启动 stop：停止 restart：重启 reload：重载 status：状态 管理服务的工具集ntsysv工具： 提供一个交互、可视化界面 可以在字符终端运行，便于集中管理多个服务 命令字： # ntsysv --level 级别列表 chkconfig工具： 不提供交互式、可视化界面 对单个服务管理效率高 命令字： 查看服务的状态 # chkconfig --list [服务名称] 设置服务的开机启动状态 # chkconfig --level 0123456 服务名称 on|off 注意：只对开机启动有影响，不会影响当前的服务状态 进程管理程序： 保存在硬盘等长期存储介质中的可执行代码 进程： 程序运行时在CPU中的状态 动态的、有父子进程关系、进程可以创建进程 PID号： 进程在创建的时候系统给与进程的一个唯一标示符 命令查看进程的状态 # ps 列出进程表 # ps aux 查看特定进程的pid # pgrep 程序名 pid号 进程的状态 进程状态分类： S：sleep睡眠状态 s：son有子进程 N：优先级低 &lt;：优先级高 l：开启多个进程 R：running处于运行状态 +：前台运行，占用终端 Z：zombie僵尸进程 查看进程树 # pstree -p pid号 查看某个进程的进程树 动态的查看进程 top 默认3秒变化一次 P：按CPU占用率排序 M：按内存占用率排序 q：退出 进程管理方式开启火狐浏览器 firefox firefox&amp; 直接在后台运行 将前台进程放入后台并暂停 ctrl+z 查看后台进程 jobs 将后台进程调入前台 fg 进程编号 使进程在后台继续运行 bg 进程编号 杀死进程 kill 进程pid -9：强制杀死 杀死进程树 killall 进程pid -9：强制]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>开机服务</tag>
        <tag>进程管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计划任务管理]]></title>
    <url>%2F2019%2F03%2F05%2F%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[计划任务的分类1.一次性计划任务 2.周期性计划任务 一次性计划任务确认一次性计划任务的服务状态 /etc/init.d/atd status 命令： 服务脚本：/etc/init.d/atd 设置任务： at [HH:MM] [YYYY-mm-dd] 任务 结束编辑任务 ctrl+d 查询 atq 删除 atrm 查看指定计划任务内容 at -c 周期性计划任务确认周期性计划任务的服务状态 /etc/init.d/crond status /var/log # cd /var # tar -zcf /tmp/log.tar.gz log 配置文件：/etc/crontab 查看周期性计划任务表 分 时 日 月 周 用户 命令 0-59 0-23 1-31 1-12 1-7 *：每 ，：分割不同时间段 -：从什么到什么 注意：一般来说时间和星期不要同时指定 配置文件修改后,对计划任务进行重载 # /etc/init.d/crond reload]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>计划任务</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[防火墙设置]]></title>
    <url>%2F2019%2F03%2F04%2F%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[IPtables都是Linux的防火墙： netfilter: 来至于linux内核中的包过滤功能体系，称为linux防火墙的“内核态” iptables： 位于/sbin/iptables，用于管理防火墙规则的工具，称为linux防火墙的“用户态” 工作层次： 主要网络层，针对IP数据包（对包内的IP地址、端口等信息的处理） 功能： 表-四张表-四个功能 raw:流量跟踪 mangle:流量标记、流量整形 nat:网络地址装换 filter:包过滤功能 链-chain-五个链-记录防护规则 INPUT:入站 OUTPUT:出站（一般不配规则） FORWARD:转发 PEREROUTIONG:路有前 POSTROUTING:路由后 结构：每一张表下有相应的链 规则： 按照下面顺序，匹配即执行；匹配不到则默认 表：raw-mangle-nat-filter 入站：PREROUTING-INPUT 出站：OUTPUT-POSTROUTING 转发：PREROUTING-FORWARD-POSTROUTING 命令： iptables [-t 表名] 选项 [链名] [条件] [-j 控制类型] 不指定表：默认filter 不指定链：默认所有链 除非设置链的默认策略，否则必须制定匹配条件 选项、链名、控制类型用大写，奇遇用小写 控制类型： ACCEPT: 允许 DROP: 丢弃 REJECT: 拒绝 LOG: 记录日志，然后匹配下一条规则 选项字： -A： 在链尾追加规则 -I： 在链首插入规则 -L： 列出所有的规则条目 -n： 数字形式显示ip地址、端口等信息 -v: 详细显示规则信息 --line-numbers: 显示规则序列号 -D: 删除链内指定序号的规则 -F: 清空所有规则 -P: 为指定的链设置默认规则 条件匹配分类： 通用匹配：直接使用，不依赖其他条件或者扩展（协议、IP地址、网络接口等） 隐含匹配：依赖于特定的协议（端口、TCP标记、ICMP类型等） 显示匹配：添加&quot;-m 扩展模块&quot;的形式明确指出（多端口、MAC地址、IP范围、数据包状态等） 通用匹配条件: -p 协议名 --协议配置 -s 原地址 --地址匹配 -d 目的地址 -i 入站网卡 --接口匹配 -o 出站网卡 隐含匹配条件： --sport 源端口 --端口匹配 --dport 目的端口 --tcp-flags 检查范围 被设置的标记 --TCP标记匹配 --icmp-type CIMP类型（0：回显应答，8：请求） --ICMP类型匹配 显示匹配条件： -m multiport --sport 源端口列表 --多端口匹配 -m multiport --dport 目的端口列表 -m iprange --src-range IP范围 --IP地址范围匹配 -m mac --mac-source MAC范围 --MAC范围匹配 -m state --state 连接状态 --状态匹配 查看运行状态 watch -n1[这是数字一] iptables -nvL --line-numbers --1s拜年话一次的方式查看 添加ftp跟踪模块： /etc/sysconfig/iptables-config 第一个空项&apos;nf_conntrack_ftp&apos; 规则备份及还原备份： iptables-save &gt; /备份路径/备份文件名 还原： iptables-restore &lt; /路径/文件名 启动脚本： /etc/init.d/iptables 规则文件位置： /etc/sysconfig/iptables SNAT策略应用：局域网主机共享一个公网ip地址接入Internet 原理：源地址装换-修改数据包的源地址 Linux条件： 局域网各个主机正确设置IP地址、子网掩码、默认网关 Linux网关支持IP路由转发 命令： iptables -t nat -A POSTROUTING -s 局域网段/24 -o 外网卡 -j SNAT --to-source 公网ip MASQUERADE-地址伪装： 用于：外网IP地址非固定，对于ADSL拨号接口（ppp0/ppp1） 命令： iptables -t nat -A POSTROUTING -s 局域网段/24 -o 外网卡 -j MASQUERADE --to-source 公网ip DNAT策略应用：在Internet发布位于企业局域网中的服务器 原理：目标地址转换-修改数据包中的目标地址 Linux条件： 局域网的web服务器能够访问Internet 网关的外网IP地址有正确的DNS解析记录 Linux网关支持IP路由转发 命令： iptables -t nat -A PREROUTING -i eth0 -d 外网接口IP -p tcp --dport 80 -j DANT --to-destination 内网主机IP 在发布时修改目标端口： iptables -t nat -A PREROUTING -i eth0 -d 公网IP -p tcp --dport 发布端口 -j DNAT --to-destination 内网主机IP：实际端口]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>防火墙</tag>
        <tag>Linux防火墙</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用文件处理命令]]></title>
    <url>%2F2019%2F03%2F04%2F%E5%B8%B8%E7%94%A8%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Linux快捷方式的使用Tab键： 补齐命令 补齐文件或目录 Ctrl+L： 让现在光标处处于最顶端（相当于清屏，但不清除内容，把所有内容移动到上端） Ctrl+C： 终止当前进程 Ctrl+U： 清除当前光标处的行 Ctrl+Shift++： 放大字体 Ctrl+-： 缩小字体 Linux命令分类以及查看帮助手册内部命令： Shell自带的命令 系统默认的解释器为bash 外部命令： 一些软件安装后产生的命令 1.查看命令帮助：#man ls 查看ls命令帮助 在帮助页面输入：/查找的命令字 能够找到输入的命令，n：查找下一个 2.在当前屏幕上显示帮助：#命令字 --help 3.查看内部命令帮助：#man cd 查看cd命令的帮助信息 4.在当前页面查看内部命令帮助：#help cd 文件处理命令# more 文件名 分页查看文件内容 空格：翻一页；b：回翻一页；q：退出 # less 文件名 逐行查看内容 空格：翻一页；下键：向下一行；上键：向上一行 # head 文件名 查看文件的前10行内容 -数字 显示前【数字】行 # tail 文件名 查看文件后10行 -f 跟踪查询，实时查询 # grep “关键字” 文件名 过滤关键字所在的行 在关键字前面加“^”符号：过滤以关键字开头的行 在关键字后面加“$”符号：过滤以关键字结尾的行 -v ：反选关键字 -n ：显示行号 --color ：高亮显示 -a ：忽略大小写查找 # du -sh 文件名 统计文件 # wc 文件名 统计文件内容 -l ：只显示行 -w ：多少字符串 -c ：显示大小 # ls -l 目录名 |grep &quot;^d&quot;|wc -l 组合命令 | ：管道符，将前一个命令的结果，作为后一个命令的输入 # alias 代替命令=&quot;源命令&quot; 给命令字赋予副命令字 永久生效： # echo &quot;&quot; &gt; /etc/bushrc # source /etc/bushrc # find 查找范围 选项 查找内容 * ：通配符 # find / -name grub -a -type d -a：and；-o：or -type：类型 d：目录；f：文件 -name:按名字查询 -user：按照用户名查询 -size：按照文件大小查询 +2M/2M/-2M：大于/等于/小于2M的文件 -exec：扩展选项，可以执行命令（格式：命令字 选项 {} 目的地 \;），以：&quot;\;&quot;结尾 # file 文件名 分析文件属性 # dd if=/dev/zero of=/tmp/bigfile bs=1M count=100 if:输入源 zero：全0文件 of：输出文件 bigfile：生成的文件 bs：单位，以多大的单位生成一次 count：生成次数 # gzip -9 文件名 压缩文件 -9：以最大比压缩文件 # gunzip 文件名 解压文件 # bzip2 -9 文件名 压缩文件（压缩比gzip更加完全） # bunzip2 文件名 解压文件 注意：gzip和bzip2都不能压缩目录，所以先生成tar包 # tar -cf /路径/生成文件名.tar 源文件名/（用相对路径压缩） 将源文件打包成生成文件（.tar） -zcf :采用gzip的压缩方式生成tar包 -jzf ：采用bzip2的压缩方式生成tar包 # tar -tf 文件名.tar 预览文件内的内容 # tar -xf 文件名.tar -C /目的地 将文件解压缩到指定目的地 -zxf ：采用gzip的压缩方式打开tar包 -jxf ：采用bzip2的压缩方式打开tar包]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>文件处理</tag>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单安全配置]]></title>
    <url>%2F2019%2F03%2F04%2F%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[已经关闭的iptables 作用：包过滤 selinux 作用：会对操作系统中所有的文件打标签 xinet名字：扩展型互联网服务 作用：新一代网络守护进程，管理多种轻量级服务(telnet,rsync,tftp) 安装软件 yum install telnet-server 配置文件 /etc/xinetd.d/telnet disable = no telnet缺点：太慢，明文传输 安装 yum install wireshark* -y 在左上角程序里面-运行wireshark-设置interface-start tcpwapper/etc/hosts.allow --白名单 /etc/hosts.deny --黑名单 黑名单配置： 服务器名称：对象（主机名，域名，IP地址，网段/子网掩码，通配符） 在/etc/xinetd.d/telnet文件中找到启动命令查看服务名称：/usr/sbin/in.telnetd 规则： 先允许，后拒绝；默认允许 SSH远程文件传递yum install lrzsz -y 在windows上： rz --上传文件到linux sz --下载linux文件到本地 命令： scp /本地文件路径 用户名@IP地址:/对方接受文件路径 scp /opt/jw.text root@192.168.0.1:/root/Desktop sftp root@192.168.0.1:/boot ssh root@192.168.0.1 -p --指定端口 -l --指定用户名 windows软件：xshell 配置文件：/etc/ssh/ :ssh.conf --客户端配置文件 :sshd.conf --服务端配置文件 Port 22 --端口号 PermitRootLogin no --拒绝root用户登录 无密码登录： 产生自己的公私钥： ssh-keygen -t rsa -t :--加密方式 传递给主机： ssh-copy-id -i id_rsa.pub 主机用户名@IP地址 后面接： &apos;命令字&apos; --用对方身份在对方服务器上运行命令 Linux远程windows桌面打开windows的远程桌面功能 安装vnc客户端 IP地址：1 Linux： yum install tsclient -y --选择图形界面连接主机 oracle，java需要图形化界面安装，完成后以level3级别运行 yum install tigervnc-server -y --安装vnc软禁 vncserver 建立vnc密码 --开启服务 vncpasswd --修改vnc密码]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>安全配置</tag>
        <tag>SSH</tag>
        <tag>远程桌面</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WEB服务器的搭建、主从DNS和虚拟主机]]></title>
    <url>%2F2019%2F03%2F04%2FWEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA%E3%80%81%E4%B8%BB%E4%BB%8EDNS%E5%92%8C%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%2F</url>
    <content type="text"><![CDATA[安装软件yum install httpd 安装 /etc/init.d/httpd 启动脚本 /etc/httpd/conf/httpd.conf 配置文件 /var/www/html 主页目录 /var/log/httpd/ 日志文件 主配置文件ServerRoot “/etc/httpd“ ：服务主目录 PidFile run/httpd.pid ：PID文件 Listen 80 ：监听端口 Include conf.d/*.conf ：扩展配置文件 User apache ：启动用户 Group apache ：启动组 ServerAdmin root@localhost ：管理员邮箱 ServerName www.example.com:80 ：域名主机名 DocumentRoot “/var/www/html“ ：默认主页存放目录 DirectoryIndex index.html index.html.var ：索引文件 ErrorLog logs/error_log ：错误日志 CustomLog logs/access_log combined ：访问日志 访问控制设定作用：对控制对特定主页的访问，为相应的目录添加访问控制 分类：客户机地址限制、用户授权限制 扩展配置文件中： Options Indexes：文件共享 FollowSymLinks：符号连接 Order配置：定义控制顺序 Order allow,deny：先允许后拒绝，默认拒绝 Order deny,allow：先拒绝后允许，默认允许 配置方式： Order allow,deny Allow from IP地址或者网段 配置访问控制的过程 创建认证用户的数据库 -htpasswd -c /etc/httpd/conf/.acluser 用户名 添加认证用户 -htpasswd /etc/httpd/conf/.acluser 用户名 添加用户授权配置 &lt;Directory &quot;/var/www/html&quot;&gt; .... AuthName &quot;ACL Directory&quot; ：自己定义显示信息 AuthType Basic ：认证类型 AuthUserFile /etc/httpd/conf/.acluser ：账号文件 requoire valid-user :有效用户可登陆 &lt;/Directory&gt; 重启服务 搭建虚拟主机虚拟主机分类： 基于域名的虚拟主机 基于IP地址的虚拟主机 基于端口的虚拟主机 配置文件： 主dns配置文件格式 options { directory &quot;/var/named&quot;; }; zone &quot;simpleware.com&quot; IN { type master; file &quot;simpleware.com.zone&quot;; allow-transfer { 192.168.0.100; }; \\允许谁获得区域配置文件 }; zone &quot;0.168.192.in-addr.arpa&quot; IN { type master; file &quot;192.168.0.zone&quot;; allow-transfer { 192.168.0.100; }; }; zone &quot;simplexue.com&quot; IN { type master; file &quot;simplexue.com.zone&quot;; allow-transfer { 192.168.0.100; }; }; 从dns配置文件格式 options { directory &quot;/var/named&quot;; }; zone &quot;simpleware.com&quot; IN { type slave; file &quot;slaves/simpleware.com.zone&quot;; \\区域文件保存位置 masters { 192.168.0.1; }; \\指定主dns服务器位置 }; zone &quot;0.168.192.in-addr.arpa&quot; IN { type slave; file &quot;slaves/192.168.0.zone&quot;; masters { 192.168.0.1; }; }; apach配置： NameVirtualHost 192.168.0.1:80 &lt;VirtualHost 192.168.0.1:80&gt; DocumentRoot /var/www/html/simpleware ServerName www.simpleware.com &lt;/VirtualHost&gt; &lt;VirtualHost 192.168.0.1:80&gt; DocumentRoot /var/www/html/simplexue ServerName www.simplexue.com &lt;/VirtualHost&gt;]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>WEB服务器</tag>
        <tag>主从DNS</tag>
        <tag>虚拟主机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Vim使用基础]]></title>
    <url>%2F2019%2F03%2F04%2Fvim%2F</url>
    <content type="text"><![CDATA[vim编辑器# vim 文件名 进入文件编辑器的命令模式 输入模式&lt;Esc&lt;&gt;a,i,o&gt;命令模式&lt;Esc&lt;&gt;:&gt;末行模式 末行模式： q：退出； w：保存； wq：保存并退出 q!：强制退出 在命令模式下常用的操作：方向键 | j,k,l,i： 上下左右移动光标 n+方向键 ： 光标向某方向移动n个字符 pgdn | Ctrl+F： 向下翻页 pgup | Ctrl+B： 向上翻页 home | ^ | 0 ： 光标跳至行首 end | $ ： 光标跳至行尾 1G | GG : 光标回首行 G ： 光标回末行 nG : 光标移至n行 x | Del ： 删除当前光标处单个字符 dd ： 剪切当前行 ndd ： 剪切从当前行开始的后面n行 d^ ： 删除当前光标之前的行 d$ : 删除当前行后面的行 yy ： 复制当前行 nyy : 复制从当前光标开始的后面n行 p ： 粘贴到当前行下 P ： 粘贴到当前行上 u ： 撤销最近一次操作 U ： 撤销当前所有操作 Ctrl+R ： 返撤销 ZZ ： 保存并退出当前编辑 末行模式常用操作：/word 从上到下在文中找“word”字符串 ?word 从下向上找“word”字符串 n 定位下一个匹配字 N 定位上一个匹配字 :set nu |nonu 显示|取消行号显示 ：w 保存修改内容 ：w /路径/文件 另存为 ：q 未修改退出 ：q! 放弃修改强制退出 ：wq 保存并退出 :e /路径/文件 打开新的文件编辑 :r /路径/文件 读入文件内容到当前编辑 :s /old/new 从当前开始的第一个“old”用“new”替换 :s /old/new/g 这一行所有的“old”都被“new”替换 :n,m s /old/new/g 从n到m行的“old”用“new”替换 :% s /old/new/g 整个文件的“old”用“new”替换 :s /old/new/c 末尾C命令：每一次替换操作都会让用户进行确认]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SSL和Mysql]]></title>
    <url>%2F2019%2F03%2F04%2FSSL%E5%92%8Cmysql%2F</url>
    <content type="text"><![CDATA[完善Apache的功能支持SSL模块 yum groupinstall &quot;web server&quot; 生成私钥 openssl genrsa -des3 -out linux.key 1024 生成请求文件 openssl req -new -key linux.key -out linux.csr 自签名 openssl x509 -req -days 365 -in linux.csr -signkey linux.key -out linux.crt 修改配置文件 vim /etc/httpd/conf.d/ssl.conf 根据105、112行，移动密钥 /etc/pki/tls/certs/localhost.crt /etc/pki/tls/private/localhost.key 重启服务 数据库SUN-&gt;UNIX系统、鹦鹉螺-&gt;java-&gt;mysql oracle:多平台，大型企业数据库，收费 sqlsever：微软 利用LINUX-&gt;mysql建立低能耗服务器（最低：1U，3个方格口） 建立SQL数据库端口号：3306 安装软件 yum install-server //安装服务端 yum install //安装客户端 启动服务 /etc/init.d/mysqld start 连接数据库 mysql -u root -p -u:用户名 修改用户密码 mysqladmin -u 用户名 -p password &apos;密码&apos; 针对数据库的操作查看数据库 show databases; 进入数据库 use 数据库名; 创建|删除数据库 create|drop table 库名; 针对表的操作查看数据库中的表 show tables; 查看表结构 desc 表名; 创建|删除表 create table 库名.表名 (字段信息); 字段信息：(字段1 长度属性,字段2 长度属性,primary key(字段1)); drop table 库名.表名; 修改表结构 alter table 库名.表名 drop| add| modify 字段信息; 在表中写入内容 insert into 库名.表名 (字段1，字段2...) values (值1，值2...) 修改表中的内容 update 库名.表名 set 字段1=值1 ,字段2=值2 where 条件 ; 删除表内容 delete from 库名.表名 where 条件; 查询表内容 select 字段 from 库名.表名 where 条件； mysql权限操作查看用户权限 show grants for 用户名@来源地址; 设置用户权限 grant 授权列表 on 库名.表名 to 用户名@来源地址 [identified by &apos;密码&apos;]; 授权列表：select delete all... 撤销用户权限 revoke 授权列表 on 库名.表名 from 用户名@来源地址; 远程访问数据库 mysql -u 用户名 -p -h 数据库服务器IP; 备份数据库目录：/var/lib/mysql/ 工具：mysqldump 备份数据库 mysqldump -u root -p 数据库名 表名 &gt;/备份路径/备份文件名 --all-databases //备份所有数据库 还原数据库 mysql -u root -p 还原成数据库名 &lt; /备份路径/备份文件名 默认的项user表:数据库中所有用户信息 安全模式启动数据库 mysqld_safe --skip-grant-tables &amp; //在后台已安全方式跳过授权列表启动mysql mysql -u root 以无密码的方式启动mqsql，查询root密码 select User,host,Password from mysql.user where User=&quot;root&quot;; 修改密码 update user set password=password(&apos;密码&apos;) where user=&apos;root&apos;; 刷新设置 flush peivileges;]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>SSL</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[root密码及安全加固]]></title>
    <url>%2F2019%2F03%2F04%2Froot%E5%AF%86%E7%A0%81%E4%BB%A5%E5%8F%8A%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA%2F</url>
    <content type="text"><![CDATA[破解root密码grub引导菜单编辑功能-e-第二行-e-在最后面加上“ 1|s|single” （rhgb：图形化引导） （quiet：静默模式） 删除root密码 # passwd -d root 安全加固grub引导文件 /boot/grub/grub.conf default=0：默认的启动优先级 timeout=5：进入引导菜单的等待时间 splashimage=...：背景图 hiddenmenu：隐藏菜单 在这儿加密码： password --encrypted 密文 （获取密文的命令：grub-crypt） title：目录 root：根 kernel：加载内核 initrd：初始化镜像盘 修复引导菜单记住逻辑卷路径：/dev/mapper/vg_jiangwei-lv_root # df -Th grub&gt; root (hd0,0) &gt;kernel /vmlinuz.. ro root=/dev/mapper/vg_jaingwei-lv_root rhgb quiet &gt;initrd /ini...img &gt;boot 救援模式加载光盘-开机-Esc-CD-ROM Drive-Rescue install sys-选择英语- 选择键盘类型-选择网络配置（NO）-继续-OK-OK-打开shell|磁盘检测|重启， 选择打开shell-chroot /mnt/sysimage/:改变根目录 单用户模式需要密码/etc/sysconfig/init 修改sushell-&gt;sulogin]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>root密码</tag>
        <tag>root账户加固</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux中逻辑卷的使用]]></title>
    <url>%2F2019%2F03%2F04%2Flinux%E4%B8%AD%E9%80%BB%E8%BE%91%E5%8D%B7%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[在LINUX中建立逻辑卷创建物理卷： 1.查看操作系统中的物理卷 # pvscan 扫描系统中的物理卷 # pvdisplay 查看详细的物理卷信息 # pvcreate /dev/sd[bcd] 把sdb、c、d创建为物理卷 # pvremove /dev/sdb 删除物理卷 创建卷组： # vgscan 扫描卷组 # vgdisplay 查看详细的卷组信息 # vgcreate -s 4x：4的倍数 jw：卷组名 /dev/sd[bc] 创建卷组 -s：基本单元大小 # vgextend jw /dev/sdd 把忘记的sdd加入到jw卷组 # vgremove jw 移除卷组 创建逻辑卷： # lvscan 扫描逻辑卷 # lvdisplay 。。 # lvcreate -L 10G -n jw_1 jw 创建逻辑卷 -L:逻辑卷的大小（空间大小） -n：逻辑卷的名字 -l：武力单元个数 # lvremove jw_1 删除逻辑卷 # mkfs.ext4 格式化 #挂载 在线扩容： # lvextend -L 20G /dev/jw/jw_1 把物理卷扩容到20G # lvextend -L +10G /dev/jw/jw_1 添加10G到逻辑卷上 # resize2fs /dev/jw/jw_1 重新在线划分逻辑卷的大小 缩减逻辑卷卸载文件系统 # umount 文件系统路径 检查文件系统 # e2fsck -f 文件系统路径 文件系统的强制检查 缩减文件系统 # resize2fs 文件系路径 调整后的文件系统大小 缩减逻辑卷 # lvreduce -L 5G 文件系统路径 移除数据 # pvmove 需要移出的设备（sdb） 目的设备名（sdd） 缩减卷组 # vgreduce 卷组名 设备名 删除物理卷 # pvremove 设备 磁盘阵列的建立RAID0：提升读写速率，不容错，安全性最低，硬盘利用率高 RAID1：容错，不提升读写速率，硬盘利用率低(成本高) RAID5：容错，提升读写速率，硬盘利用率比较高（算法：异或） 组件虚拟磁盘阵列： # mdadm -C /dev/md0 -n3 -l5 /dev/sd[cde] -C ：创建新的阵列 -n ：利用的磁盘数量 -l ：RAID的等级 查看建立的阵列信息： # cat /proc/mdstat # mdadm -D /dev/md0 修改配置文件，让阵列永久生效： # vim /etc/mdadm.config ARRAY /dev/md0 UUID=... 创建pv.vg.lv.格式化.挂载. 虚拟机模拟磁盘故障设定磁盘为故障盘 # mdadm --manage /dev/md0 --fail /dev/sdc # cat /proc/mdstat 移除故障盘 # mdadm --manage /dev/md0 --remove /dev/sdc 添加磁盘 # mdadm --manage /dev/md0 --add /dev/sdf 停用磁盘阵列卸载设备 # umount /dev/md0 修改fstab文件 # vim /etc/fstab 修改mdadm.config文件 # vim /etc/mdadm.config 停用阵列 # mdadm -S /dev/md0 查看阵列使用状态 # /proc/mdstat]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>Linux逻辑卷</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[lamp平台和邮件平台搭建]]></title>
    <url>%2F2019%2F03%2F04%2Flamp%E5%B9%B3%E5%8F%B0%E5%92%8C%E9%82%AE%E4%BB%B6%E5%B9%B3%E5%8F%B0%2F</url>
    <content type="text"><![CDATA[安装软件包# yum install mysql-server httpd php php-mysql php-mbstring -y 修改配置文件：/etc/php.ini --229行 short_open_tag = on 启动脚本：/etc/init.d/httpd 配置文件：/etc/httpd/conf.d/php.conf 配置主页：/var/wwww/html vim index.php &lt;? phpinfo(); ?&gt; 邮件服务器连接邮件服务器：mta 端口：25 协议：SMTP，简单邮件传输协议 验证用户身份：mda 端口：110,143 协议：POP3,IMAP4 安装软件yum install postfix -y 配置文件:/etc/postfix/main.cf 75:myhostname = mail.xxx.com --主机名 83:mydomain = xxx.com --域名 99:myorigin = $mydomain --引用域名 113:inet_interfaces = all --关闭116行内容 164:mydestination = $mydomain, $... --接收邮件的域 419:home_mailbox = Maildir/ --存储邮件地址 重启服务： /etc/init.d/postfix restart 安装软件 yum install telnet 连接服务 telnet 192.168.0.1 25 mail from:tom@xxx.com --发件人 rcpt to:jw@xxx.com --收件人 data --开始写内容 object:hello --主题 i am tom. --内容 . --内容结束标志 quit --退出编辑 安装邮件客户端安装软件yum istall dovecot 配置文件 /etc/dovecot/dovecot.conf mail_location = maildir:~/Maildir ssl = no disable_plaintext_auth = no protocols = imap pop3 lmtp 启动服务 /etc/init.d/dovecot start 安装松鼠邮件系统把squirrelmail-webmail-1.4.22.tar安装包拷贝到桌面 &gt; 解压缩到/var/www/html/mial &gt; 运行./configure &gt; 设置域名、接收邮件服务器、接收邮件工具(dovecot)、发送邮件服务器 &gt; 保存-退出 汉化： 把汉化包拷贝到桌面 &gt;解压缩到桌面 &gt; 运行./install &gt;输入:/var/www/html/mail &gt;拷贝文件到目录里面 &gt; 运行mail下的./config &gt;选择10 &gt;语言设置成：ch_CN &gt; 语言编码：utf-8 &gt;保存、退出 创建文件夹： 在/var/local/sqirre..文件夹下面创建:attach 、data文件夹 &gt; &quot; 更改文件夹权限：chown apache:apache attach|data &quot;&gt; 重启服务 修改上传限制： 修改/etc/php.ini中的：upload_max_filesize | post_max_size来设置上传文件大小 建立邮件服务器的步骤：1.安装apache服务-httpd-/etc/httpd/conf/httpd.conf 2.安装DNS服务-bind-/etc/named.conf | /etc/named.rfc.. | /var/named/正反向解析域 3.搭建lamp平台-mysql-server httpd php php-mysql php-mbstring-/etc/php.ini | httpd | php.conf 4.安装postfix-postfix-/etc/postfix/main.cf 5.安装dovecot-dovecot-/etc/dovecot/dovecot.conf 6.客户端用windows：用客户端连接服务器 7.客户端用web页面：安装松鼠邮件系统-到/var/www/html/mail-安装汉化包-到/var/www/html/mail -创建文件夹：attach | data-修改权限-修改上传限制/etc/php.ini 8.重启所有服务]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>lamp平台</tag>
        <tag>邮件平台</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DNS服务器搭建]]></title>
    <url>%2F2019%2F03%2F04%2FDNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[安装软件yum install bind /etc/init.d/named 服务脚本 端口：53 /etc/named.conf 配置文件 /var/named/ 数据保存地方 &quot; 特别注意： 在建立正反向解析区域文件后必须修改属组属性 chgrp named 正反向解析与文件名 &quot; 主要配置文件全局配置(/etc/named.conf)：options { listen-on port 53 {192.168.0.100;}; :监听端口 directory &quot;/var/named&quot;; ：数据文件存放位置 allow-query {192.168.0.0/24;}; ：ACL网段 } 区域配置(/etc/named.rfc1912.zones)也可以配置在全局里面：zone &quot;simpleware.com&quot; IN ：域名 { type master; ：服务器角色 file &quot;simpleware.com.zone&quot; ：正向解析文件 allow-transfer {192.168.0.200;}; ：从属服务器IP地址 master {192.168.0.100;}; ：主服务器IP地址 } zone &quot;0.168.192.in-addr.arpa&quot; IN ：域名 { type master; ：服务器角色 file &quot;192.168.0.zone&quot; ：反向解析文件 allow-transfer {192.168.0.200;}; master {192.168.0.100;}; } 正向解析配置文件(/var/named/simpleware.com.zone)$TTL 1D :生存周期1天 @ IN SOA simpleware.com. root.simpleware.com.( 2016110901 ;serial //修改版本号 1M ;refresh // 2M ;retry 1H ;expire 3M); minimum //授权信息 NS dns1.simpleware.com. MX 10 mail.simpleware.com . dns1 A 192.168.0.1 mail A 192.168.0.1 www A 192.168.0.1 反向解析配置文件$TTL 1D :生存周期1天 @ IN SOA simpleware.com. root.simpleware.com.( 2016110901 ;serial //修改版本号 1M ;refresh // 2M ;retry 1H ;expire 3M); minimum //授权信息 NS dns1.simpleware.com. 1 PTR dns1.simpleware.com. 检查配置是否正确named-checkconf :检查主配置文件是否有误 -z :检查正反向解析文件是否配置正确 其中： NS:域名服务器 MX:邮件交换 A:正向解析 PTR:反向解析 CNAME:别名 ##缓存DNS服务器的搭建 根区域配置文件：/var/named/named.caoptions { //listen-on port 53 { 127.0.0.1; }; listen-on-v6 port 53 { ::1; }; directory &quot;/var/named&quot;; dump-file &quot;/var/named/data/cache_dump.db&quot;; statistics-file &quot;/var/named/data/named_stats.txt&quot;; memstatistics-file &quot;/var/named/data/named_mem_stats.txt&quot;; //allow-query { localhost; }; recursion yes; forwarders {114.114.114.114;}; :转发解析 }; zone &quot;.&quot; IN { type hint; file &quot;named.ca&quot;; };]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>DNS服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DHCP服务器搭建]]></title>
    <url>%2F2019%2F03%2F04%2FDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[DHCP服务器作用：动态分配IP地址 分配信息：IP地址、网关、子网掩码、DNS 端口号：67 ##搭建服务器过程 安装DHCP软件： # yum install dhcpd 启动服务： # vim /etc/dhcpd/dhcp.conf 末行模式下：/r /...(实例文件) 工作网段：subnet .... netmask .... { 地址池:range ....; DNS服务:option domain-name-servers ....; 网关:option routers ....; 默认租约时间:default-lease-time ..; 最长租约时间:max-lease-time ..; } 给单个主机设置IP地址 host hostnane { 主机MAC地址:hardware ethernet ::::; 分配给它的IP地址:fixed-address ....; } 重启服务： # service dhcp restart 客户机修改配置文件： /etc/sysconfig/network-scripts/sycfg-eth0 重启网卡： # ifdown eth0 # ifup eth0]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
        <tag>DHCP服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络前导知识]]></title>
    <url>%2F2019%2F03%2F01%2F%E7%BD%91%E7%BB%9C%E5%89%8D%E5%AF%BC%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[计算机网络=通信技术+计算机技术。 通信子网,资源子网,通信协议 网络分类：一.按拓扑结构划分计算机为点，通信线路为线，成为拓扑结构 常见的结构：总线型 星型 环形 1.总线型：一根总线，所有节点全部连在总线上 优点：投资比较少,简单，易于扩充 缺点：故障率高，诊断困难， 2.星型：集线器为中心，其他节点连在中心 优点：结构简单，易于添加和减少，考验中心节点的处理能力 缺点：电缆长，对中心节点依赖性强 3.环形：总线为圈，其他节点连在总线上 优点：可靠性增加，传输介质可混合 缺点：出了故障直接瘫痪，故障诊断困难;网络重新配置比较困难 二.按网络覆盖范围分类1.局域网：一般在几十米到几公里范围内。（分类：以太网，令牌环网，FDDI等）局域网&gt;以太网 2.广域网：（几公里-十几公里） 3.城域网：（10-100公里） 三.按服务方式分类1.对等网优点：节省开支， 缺点：只适用于小规模，不便于管理，安全问题突出 2.客户机/服务器网络优点：统一管理，安全好 缺点：建设投入比较大 四.按传输介质分有线网、无线网 网络原理一.计算基础二进制,十进制,十六进制(之间的相互转化原理) 二进制转十进制:2^n+2^n+1... 十进制转二进制:除二取余数,倒着读 二.网络协议计算机之间通信的标准,或者叫规则,准则. 三.网络带宽与吞吐量模拟信号:HZ 数字信号:bps 带宽:理论情况下的传输速率 吞吐量:实际情况下的传输速率 四.信号和数据信号:带有数据信息的电频,光,模拟信号 模拟信号:波动性,持续性,不易衰减,抗干扰差,衰减后需放大同时放大噪声(放大器) 数字信号:离散型,跃变性,容易衰减,抗干扰能力强,放大后抑制噪声(中继器) 基带和基带传输 基带:一种数字传输方式 基带传输:使用直流脉冲方式传输,基带系统一次只能传输一个信号或者一个信道,可以双向传输 宽带和宽带传输 宽带:也是一种传输方式 宽带传输:使用射频模拟脉冲,能同时接入多条信道,只能单向传输,比基带系统传输距离远 五.网络介质双绞线(100米)(非屏蔽双绞线,屏蔽双绞线):四对相对独立,两两扭在一起的绝缘铜线组成的通信介质 特点:抗干扰能力强,绕线率越高,抗噪性越好,衰减越明显,价格便宜,使用灵活,有较高的传输速率,易遭物理损害. 双绞线线序: 568A:白绿,绿,白橙,蓝,白蓝,橙,白棕,棕 568B:白橙,橙,白绿,蓝,白蓝,绿,白棕,棕 同种设备相连:交叉线(一头是A,一头是B) 不同种设备相连:直通线(两头都是B) 常见的双绞线:CAT1(两个电线对),适用于语音通话;CAT2:4M;CAT3:10M以内;CAT4:10M以上;CAT5:100M;超五:200M以上 同轴电缆(粗缆和细缆):铜芯,绝缘层,屏蔽层,外壳组成的传输介质 特点:抗干扰比双绞线强,只支持较低的吞吐量,需要终端电阻器终结信号 粗缆(500米):10base5(10:10M,base:基带传输，5:500米)，比光缆便宜，比细缆贵，比双绞线贵【用收发器接收信号】 细缆（200米）：10base2（10:10M，base：基带传输，2:200米），比粗缆便宜，比双绞线贵【用BNC T型连接器接出信号】 光缆光导纤维：极细的玻璃纤维或者石英纤维的传输介质，用激光二极管或者发光二极管在通电后产生光信号。 （单模光纤，多模光纤）单模光纤：【只传递一条光信号】更细的芯，不易发散，只用激光作为光源，适合长距离传输 多模光纤：【可以同时传递多条光信号】比单模光纤粗（10倍左右），允许更大的光发散或信号衰减，使用LED作为光源，适合长距离传输，但是比单模短。 吞吐量：10G以上，速率快，成本高， 特性：连接器：SC,ST,FC,LS;抗噪性强 无线网电磁波为传输介质 设备:无线交换机,无线路由器,无线网卡,无线接入点 网络设备中继器作用:发大信号,工作于物理层 集线器工作于：物理层（第一层） 作用:集线功能,信号再生 缺点:集线器是一个冲突域,工作越多,冲突越多,使用的是:CMSA/CD(载波监听,多点接入,碰撞检测). 网桥作用:一种存储转发设备,链接类型相似的网络 能够根据需要,转发或者不转发以太帧 网桥不改变以太帧的源和目的地址 交换机工作于：数据链路层（第二层） 作用：使用硬件桥连帧（利用MAC地址来转发帧），有多路径底板和某种交换结构，用于交换多个网段的帧，是一个快速网桥 特点：每个接口是一个冲突域，减少冲突，不能隔离广播，连接两端必须是使用相同的访问方法 三层交换机和路由器的区别：三层交换机，数据交换能力强，路由能力差，接口多，用于数据交换量大的内网 路由器：数据交换能力差，路由能力强，接口少，用于连接内网和外网（不同网络之间的通信） 路由器工作于：网络层（第三层） 作用：连接不同网络，实现通信。 特点：支持多个链路的复杂网络，决定数据包在网络中如何传递；能隔离广播域，连接两端必须使用相同的通信协议 工作原理：收到数据包，查看数据包的IP地址，对比自己的路由表，按路由表选择网路路径，并转发，没有就丢弃。 网关用于连接不同通信协议的软件，一般是硬件上面安装软件实现。 作用：实现协议转换 防火墙作用：隔离两个或者多个网络，限制网络之间的互访，保护内网的用户和数据 入侵检测（IDS）作用：网络安全设备，对网络、系统运行状态进行监听以及及时发现攻击企图，与防火墙进行联动。只能检测不能防御 入侵防御系统（IPS）作用：突破传统的IDS只能检测不能防御的局限性，提供了完整的入侵防御解决方案 OSI参考模型什么是OSI参考模型分别是：应用层，表示层，会话层，运输层，网络层，数据链路层，物理层 传输的数据单元：物理层：比特；数据链路层：帧；网络层：数据包（IP数据包）；传输层：数据段 各层作用：物理层：比特流与电信号的转换 数据链路层：数据帧和比特流之间的转化 网络层：进行路由工作 传输层：数据完整性检测 会话层：连接的建立，断开，保持工作 表示层：接收不同形态的表示信息 应用层：针对每个应用的协议 OSI的作用：让厂家生产的产品标准化，便于通信 传输层：添加TCP/UDP头（报文） 网络层：添加IP包头（数据包） 数据链路层：添加MAC子层和FCS（帧校验序列）包尾 以太网技术（局域网&gt;以太网）标准（10M），快速（100M)，高速(1000M)，10G 定义：以太网是典型的局域网技术 作用：解决共享网段上多台计算机之间的数据传输时的冲突问题，使用的技术：CSMA/CD 以太网的帧格式：48位，24位厂商代码，24序列码，一般使用16机制计数（MAC地址） CSMA/CD：发送时载波监听，判断是否空闲，多点发送时进行碰撞检测，如果碰撞，等待随机时间，重新发送 以太网的自动协商机制：通信双方根据双方情况，自动协商双工模式和速率等参数。 双工模式：全双工，半双工 以太网的标准：IEEE 802.3 以太网交换技术：节点数量越多，冲突越多，广播越多，适当添加交换机抑制冲突域，路由器抑制广播域 网桥/交换机：会将一个冲突域划分为两个冲突域 交换机转发模式：直通式：收到直接转发，不存储 存储转发：收到，先存存储，等到整个帧收完了再转发 抑制广播：使用三层设备 各层协议： 应用层：HTTP,FTP,TFTP,SMTP,SNMP,DNS 传输层：TCP,UDP 网络层：ICMP,IGMP,IP,ARP,RARP 数据链路层和物理层：由底层网络定义的协议 TCP五层模型和OSI七层模型的特点： 相同：都是以协议栈的概念为基础，协议栈中的协议彼此相互独立，下层为上层提供服务 不同点：OSI适用于各中协议栈，TCP/IP只使用于自己，层次数量不同 分层的作用：将细化网络通信，便于部件设计和故障排除；便于各种类型网络软硬件通信；防止某一层改变影响其他层 服务类型： 面向连接服务：先建立连接，在传输数据；数据传输过程中不携带目的地址；保证数据传输的可靠性，传输完后断开连接（TCP） 无连接服务：不建立连接，直接发送数据，每个报文都有目的地址，速度快，不保证传输的可靠性（UDP） TCP/IP协议组TCP ：面向连接的协议，提供可靠的数据传输 UDP：采用面向无连接的通信，速度快，不可靠 IP协议 ：负责寻找目标计算机的地址并路由数据包 ICMP ：负责诊断和报告数据传输错误，如Ping ARP ：地址解析协议，根据目标计算机的IP地址解析出目标计算机的MAC地址，并保存在缓存中。 RARP：逆地址解析协议。 HTTP：超本文传输协议，用于传输html格式的文件 HTTPS：使用SSL加密技术传输文件 FTP：文件传输协议 SMTP：简单邮件传输协议 NNTP：网络新闻传输协议 HTML：超文本标记语言 DHTML：动态HTML，可创建交互页面 TCP包头 源端口号16位：标示主机发起传输的应用程序 目的端口号16位：标示主机上传输要求达到的应用程序 序列号32位：用来标示从TCP源端口向TCP目标发送的数据字节流，表示这个报文里的第一个数据字节 确认号32位：ACK确认标志位为1时使用，表示目标端口所期望收到源端口的下一个数据字节 头部长度、数据偏移4位：表示TCP头部占多少字节，最少20，最多60 预留6位 标志位（U,A,P,R,S,F）各占1位： URG：紧急指针 ACK：确认指针 PSH：直接交付指针 RST：重连指针 SYN：连接指针 FIN：释放指针 窗口大小16位：表示本机期望一次接收的字节数，进行流量控制 校验和16位：对整个TCP报文进行的校验和计算，验证数据的完整性 紧急指针字段16位：一个偏移量，和序列号中的值相加，表示紧急数据最后一个字节的序号 选项和填充字段32位：用于窗口控制，时间戳等 TCP工作原理三次握手： 四次挥手： IP地址 IP地址：互联网上每一台主机的唯一标示符 严格的说：IP地址不是针对主机的，而是针对设备接口的 3类IP地址：A：1.-126. B：128.-191. C：192.-223. 全0：网络回路；全1：广播 私网地址：A：10.0.0.0-10.255.255.255 B：172.16.0.0-172.31.255.255 C：192.168.0.0-192.168.0.0 计算子网掩码xxx.xxx.xxx.xxx /26 表示前面26位都是网络地址，子网掩码：前26位都是1 几个重要的分层作用网络层作用：有效的解决一种网络互联的问题：屏蔽异种网络，全网统一标示； 设计思想：高效，简洁，提供不可靠链接（尽力传输），信任物理信道的传输质量，由传输层进行纠错，点对点通信； 核心问题：最有路径选择 传输层作用：使源主机和目标主机对等实体之间会话，提供端到端的连接。 典型协议：TCP，误差控制，流量控制 UDP，无连接服务 域名：域名和IP是一对多的关系：一个IP有多个域名]]></content>
      <categories>
        <category>网络基础知识</category>
      </categories>
      <tags>
        <tag>网络基础</tag>
        <tag>路由与交换</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows系统基础及文件系统]]></title>
    <url>%2F2019%2F02%2F27%2F%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%89%8D%E7%9E%BB%2F</url>
    <content type="text"><![CDATA[计算机的组成主板、CPU、硬盘、内存、显卡、声卡、网卡、光驱、机箱、显示器等 CPU：中央处理器 主频：处理速度 外频：和外面的数据交换速度 前段总线频率：CPU与内存的数据交换速度 64位技术：CPU一次处理64位数据 缓存：解决内存与CPU的速度差异 多核心技术：CPU内核有多个，同时处理数据 接口：与各种其它原件的数据接口 内存：解决硬盘与CPU的读写速度差异 北桥芯片：负责快速存取设备之间的数据交换（内存、缓存、显卡等） 南桥芯片：负责慢速设备之间的数据交换（I/O设备，USB，vlan等） 硬盘接口：SATA、IDE、SCSI、SAS 按网络管理方式分类对等网：无集中的管理，适用于小型的网络，网络性能差 ，文件分散管理，计算机资源占用大 客户机-服务器：集中统一管理，结构简单 windows版本： win95：成为正式的操作系统 winxp：最成功的操作系统 win7：成功的版本 windows服务器版本： win2008的各种版本：标准版，企业版，数据中心版，web版，针对安腾64位处理器版本 标准版：具有主流服务器的所有功能 企业版：提供更高的可用性和可靠性 数据中心版：支持更大的内存与多处理器 web版：针对web的服务器 win2008网络组件： 网络适配器：网卡 协议 网络服务与客户端 查看netBIOS计算机名称：\\ip地址 工作组： 计算机的地位都是平等的 每一台计算机都独立维护自己的资源，没有集中式管理 计算机本地存储账户信息 一个账户只能登陆一台计算机 网络规模限制小于10台计算机 查看用户的sid cmd模式：-whoami/logonid windows相关联的用户账户：system、local service、network service 组的概念： 组是账号的集合 方便管理 当一个用户加入某个组的时候，该用户会继承改组的所用权限 默认组中比较重要的组： administrator：管理员组 guests：来宾组，基本没什么权限 powre users：高权限用户，有一定的管理权限 users：标准用户组，最安全的组，只有修改自己资源的权限 ALP：用户账户、本地组和权限的规则 建立用户 将用户添加进组 给组分配权限 文件权限windows常见的文件系统 FAT:DOS、win95、win98、win2000、winxp。最大可管理2GB分区 FAT32：winxp、win2000/2003。理论最大2T，实际支持32G，单个文件最大4G NTFS：现在的操作系统。分区最大2T，单个文件最大64G linux：ext3、ext4 NTFS文件系统的优点： 1.可以对单个文件或文件夹设置权限 2.支持更大的磁盘容量，更大的单个文件 3.支持加密与压缩 4.活动目录需要使用NTFS 5.支持磁盘配额 获取NTFS文件系统： 格式化选择格成NTFS文件系统 命令行：-convert x: /fs:ntfs 使用第三方软件 NTFS文件系统的权限： 可针对不同的用户或者组设置不同的权限 只有被授予权限的用户或者组才能访问文件 权限有： 完全控制：能够执行所有操作 修改：修改、删除文件或者文件夹 读取和运行：读取内容，运行程序 列出文件夹目录：列出文件夹下所有的文件 读取：读取文件夹或文件的内容 写入：创建文件或文件夹 特殊权限：与数据无关的其他权限 特殊权限： 与安全选项卡相关： 读取权限：能够查看文件或这文件夹的权限信息 更改权限：能够更改文件或者文件夹的权限信息 取得所有权：能够控制文件或者文件夹 NTFS文件系统的权限组合： 权限相加：用户W,组R--》用户：W+R 权限继承：文件会继承文件夹的权限，文件夹会继承磁盘的权限 强制继承：在高级安全设置上，从父项继承为从上继承；将后代的权限替换父项的权限为强制继承 复制：继承目的文件夹的权限 移动：同盘下：保留原来权限；不同盘：继承目的文件夹的权限]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows基础</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux系统基础]]></title>
    <url>%2F2019%2F02%2F26%2FLinux%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[Unix人物： 肯·汤姆逊、丹尼斯·离奇 --C语言 Richard M.Stallman --GNU社区，开源，GPL协议 塔能鲍姆 --MINIX Linus Torvalds --Linux:GNU/Linux,1992年 软件： Debian流： Debian版Linux：服务器版 ubuntu版Linux：桌面版 --由Debian改成桌面版 Kali版Linux:渗透，攻防 --由Debian改的 红帽流： Red Hat 企业版：企业版服务器 Fedora 社区版：个人版操作系统 CentOS 社区版：社区企业操作系统 应用Linux# cat /proc/meminfo 查看内存信息 # cat /proc/cpuinfo 查看CPU信息 # fdisk -l 查看硬盘信息 # poweroff 关机 # shutdown -h now 关机 # init 0 关机 # reboot 重启 # shutdown -r now 重启 # init 6 重启 # uname -r 查看Linux内核 # setup 进入系统设置-FireWall-去掉星号（光标在星号处，空格）-保存 # gedit /etc/selinux/config --进入记事本（File System-etc-Selinux-config:把enforcing&gt;&gt;&gt;disable） 安装VM toos点击虚拟机的虚拟机：安装Vm tools 将压缩包拷贝到桌面-右键解压缩(Extract here)-进入解压目录- 在目录内右键打开命令行-输入./[绿色文件名] -d（默认安装）-等待安装完成- 关机-建立快照 Linux基本信息Linux的硬盘标示方法SDA sd表示硬盘接口类型sata/scsi/usb a表示第几块物理硬盘a1/b2/c3... 内核表示2.6.32（官方内核） 2：主版本号 6：次版本号（奇数：开发版内核；偶数：稳定版内核） 32：修订次数]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
